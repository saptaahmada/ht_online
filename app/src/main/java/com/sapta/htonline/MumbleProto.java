// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mumble.proto

package com.sapta.htonline;

public final class MumbleProto {
  private MumbleProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class Version extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Version.newBuilder() to construct.
    private Version() {
      initFields();
    }
    private Version(boolean noInit) {}
    
    private static final Version defaultInstance;
    public static Version getDefaultInstance() {
      return defaultInstance;
    }
    
    public Version getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private boolean hasVersion;
    private int version_ = 0;
    public boolean hasVersion() { return hasVersion; }
    public int getVersion() { return version_; }
    
    // optional string release = 2;
    public static final int RELEASE_FIELD_NUMBER = 2;
    private boolean hasRelease;
    private String release_ = "";
    public boolean hasRelease() { return hasRelease; }
    public String getRelease() { return release_; }
    
    // optional string os = 3;
    public static final int OS_FIELD_NUMBER = 3;
    private boolean hasOs;
    private String os_ = "";
    public boolean hasOs() { return hasOs; }
    public String getOs() { return os_; }
    
    // optional string os_version = 4;
    public static final int OS_VERSION_FIELD_NUMBER = 4;
    private boolean hasOsVersion;
    private String osVersion_ = "";
    public boolean hasOsVersion() { return hasOsVersion; }
    public String getOsVersion() { return osVersion_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasVersion()) {
        output.writeUInt32(1, getVersion());
      }
      if (hasRelease()) {
        output.writeString(2, getRelease());
      }
      if (hasOs()) {
        output.writeString(3, getOs());
      }
      if (hasOsVersion()) {
        output.writeString(4, getOsVersion());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getVersion());
      }
      if (hasRelease()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getRelease());
      }
      if (hasOs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getOs());
      }
      if (hasOsVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getOsVersion());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Version parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Version parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.Version prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.Version, Builder> {
      private com.sapta.htonline.MumbleProto.Version result;
      
      // Construct using com.example.mumbleclient.MumbleProto.Version.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.Version();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.Version internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.Version();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.Version getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.Version.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.Version build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.Version buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.Version buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.Version returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.Version other) {
        if (other == com.sapta.htonline.MumbleProto.Version.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasRelease()) {
          setRelease(other.getRelease());
        }
        if (other.hasOs()) {
          setOs(other.getOs());
        }
        if (other.hasOsVersion()) {
          setOsVersion(other.getOsVersion());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setVersion(input.readUInt32());
              break;
            }
            case 18: {
              setRelease(input.readString());
              break;
            }
            case 26: {
              setOs(input.readString());
              break;
            }
            case 34: {
              setOsVersion(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 version = 1;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public int getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(int value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      // optional string release = 2;
      public boolean hasRelease() {
        return result.hasRelease();
      }
      public String getRelease() {
        return result.getRelease();
      }
      public Builder setRelease(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRelease = true;
        result.release_ = value;
        return this;
      }
      public Builder clearRelease() {
        result.hasRelease = false;
        result.release_ = getDefaultInstance().getRelease();
        return this;
      }
      
      // optional string os = 3;
      public boolean hasOs() {
        return result.hasOs();
      }
      public String getOs() {
        return result.getOs();
      }
      public Builder setOs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOs = true;
        result.os_ = value;
        return this;
      }
      public Builder clearOs() {
        result.hasOs = false;
        result.os_ = getDefaultInstance().getOs();
        return this;
      }
      
      // optional string os_version = 4;
      public boolean hasOsVersion() {
        return result.hasOsVersion();
      }
      public String getOsVersion() {
        return result.getOsVersion();
      }
      public Builder setOsVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOsVersion = true;
        result.osVersion_ = value;
        return this;
      }
      public Builder clearOsVersion() {
        result.hasOsVersion = false;
        result.osVersion_ = getDefaultInstance().getOsVersion();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.Version)
    }
    
    static {
      defaultInstance = new Version(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.Version)
  }
  
  public static final class UDPTunnel extends
      com.google.protobuf.GeneratedMessageLite {
    // Use UDPTunnel.newBuilder() to construct.
    private UDPTunnel() {
      initFields();
    }
    private UDPTunnel(boolean noInit) {}
    
    private static final UDPTunnel defaultInstance;
    public static UDPTunnel getDefaultInstance() {
      return defaultInstance;
    }
    
    public UDPTunnel getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required bytes packet = 1;
    public static final int PACKET_FIELD_NUMBER = 1;
    private boolean hasPacket;
    private com.google.protobuf.ByteString packet_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPacket() { return hasPacket; }
    public com.google.protobuf.ByteString getPacket() { return packet_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPacket) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPacket()) {
        output.writeBytes(1, getPacket());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPacket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPacket());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UDPTunnel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.UDPTunnel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.UDPTunnel, Builder> {
      private com.sapta.htonline.MumbleProto.UDPTunnel result;
      
      // Construct using com.example.mumbleclient.MumbleProto.UDPTunnel.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.UDPTunnel();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.UDPTunnel internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.UDPTunnel();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.UDPTunnel getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.UDPTunnel.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.UDPTunnel build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.UDPTunnel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.UDPTunnel buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.UDPTunnel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.UDPTunnel other) {
        if (other == com.sapta.htonline.MumbleProto.UDPTunnel.getDefaultInstance()) return this;
        if (other.hasPacket()) {
          setPacket(other.getPacket());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setPacket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes packet = 1;
      public boolean hasPacket() {
        return result.hasPacket();
      }
      public com.google.protobuf.ByteString getPacket() {
        return result.getPacket();
      }
      public Builder setPacket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPacket = true;
        result.packet_ = value;
        return this;
      }
      public Builder clearPacket() {
        result.hasPacket = false;
        result.packet_ = getDefaultInstance().getPacket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.UDPTunnel)
    }
    
    static {
      defaultInstance = new UDPTunnel(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.UDPTunnel)
  }
  
  public static final class Authenticate extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Authenticate.newBuilder() to construct.
    private Authenticate() {
      initFields();
    }
    private Authenticate(boolean noInit) {}
    
    private static final Authenticate defaultInstance;
    public static Authenticate getDefaultInstance() {
      return defaultInstance;
    }
    
    public Authenticate getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string username = 1;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private boolean hasUsername;
    private String username_ = "";
    public boolean hasUsername() { return hasUsername; }
    public String getUsername() { return username_; }
    
    // optional string password = 2;
    public static final int PASSWORD_FIELD_NUMBER = 2;
    private boolean hasPassword;
    private String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public String getPassword() { return password_; }
    
    // repeated string tokens = 3;
    public static final int TOKENS_FIELD_NUMBER = 3;
    private java.util.List<String> tokens_ =
      java.util.Collections.emptyList();
    public java.util.List<String> getTokensList() {
      return tokens_;
    }
    public int getTokensCount() { return tokens_.size(); }
    public String getTokens(int index) {
      return tokens_.get(index);
    }
    
    // repeated int32 celt_versions = 4;
    public static final int CELT_VERSIONS_FIELD_NUMBER = 4;
    private java.util.List<Integer> celtVersions_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getCeltVersionsList() {
      return celtVersions_;
    }
    public int getCeltVersionsCount() { return celtVersions_.size(); }
    public int getCeltVersions(int index) {
      return celtVersions_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUsername()) {
        output.writeString(1, getUsername());
      }
      if (hasPassword()) {
        output.writeString(2, getPassword());
      }
      for (String element : getTokensList()) {
        output.writeString(3, element);
      }
      for (int element : getCeltVersionsList()) {
        output.writeInt32(4, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUsername()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUsername());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      {
        int dataSize = 0;
        for (String element : getTokensList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTokensList().size();
      }
      {
        int dataSize = 0;
        for (int element : getCeltVersionsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCeltVersionsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Authenticate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.Authenticate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.Authenticate, Builder> {
      private com.sapta.htonline.MumbleProto.Authenticate result;
      
      // Construct using com.example.mumbleclient.MumbleProto.Authenticate.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.Authenticate();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.Authenticate internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.Authenticate();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.Authenticate getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.Authenticate.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.Authenticate build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.Authenticate buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.Authenticate buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tokens_ != java.util.Collections.EMPTY_LIST) {
          result.tokens_ =
            java.util.Collections.unmodifiableList(result.tokens_);
        }
        if (result.celtVersions_ != java.util.Collections.EMPTY_LIST) {
          result.celtVersions_ =
            java.util.Collections.unmodifiableList(result.celtVersions_);
        }
        com.sapta.htonline.MumbleProto.Authenticate returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.Authenticate other) {
        if (other == com.sapta.htonline.MumbleProto.Authenticate.getDefaultInstance()) return this;
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (!other.tokens_.isEmpty()) {
          if (result.tokens_.isEmpty()) {
            result.tokens_ = new java.util.ArrayList<String>();
          }
          result.tokens_.addAll(other.tokens_);
        }
        if (!other.celtVersions_.isEmpty()) {
          if (result.celtVersions_.isEmpty()) {
            result.celtVersions_ = new java.util.ArrayList<Integer>();
          }
          result.celtVersions_.addAll(other.celtVersions_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setUsername(input.readString());
              break;
            }
            case 18: {
              setPassword(input.readString());
              break;
            }
            case 26: {
              addTokens(input.readString());
              break;
            }
            case 32: {
              addCeltVersions(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCeltVersions(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional string username = 1;
      public boolean hasUsername() {
        return result.hasUsername();
      }
      public String getUsername() {
        return result.getUsername();
      }
      public Builder setUsername(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder clearUsername() {
        result.hasUsername = false;
        result.username_ = getDefaultInstance().getUsername();
        return this;
      }
      
      // optional string password = 2;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // repeated string tokens = 3;
      public java.util.List<String> getTokensList() {
        return java.util.Collections.unmodifiableList(result.tokens_);
      }
      public int getTokensCount() {
        return result.getTokensCount();
      }
      public String getTokens(int index) {
        return result.getTokens(index);
      }
      public Builder setTokens(int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tokens_.set(index, value);
        return this;
      }
      public Builder addTokens(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<String>();
        }
        result.tokens_.add(value);
        return this;
      }
      public Builder addAllTokens(
          Iterable<? extends String> values) {
        if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<String>();
        }
        super.addAll(values, result.tokens_);
        return this;
      }
      public Builder clearTokens() {
        result.tokens_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 celt_versions = 4;
      public java.util.List<Integer> getCeltVersionsList() {
        return java.util.Collections.unmodifiableList(result.celtVersions_);
      }
      public int getCeltVersionsCount() {
        return result.getCeltVersionsCount();
      }
      public int getCeltVersions(int index) {
        return result.getCeltVersions(index);
      }
      public Builder setCeltVersions(int index, int value) {
        result.celtVersions_.set(index, value);
        return this;
      }
      public Builder addCeltVersions(int value) {
        if (result.celtVersions_.isEmpty()) {
          result.celtVersions_ = new java.util.ArrayList<Integer>();
        }
        result.celtVersions_.add(value);
        return this;
      }
      public Builder addAllCeltVersions(
          Iterable<? extends Integer> values) {
        if (result.celtVersions_.isEmpty()) {
          result.celtVersions_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.celtVersions_);
        return this;
      }
      public Builder clearCeltVersions() {
        result.celtVersions_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.Authenticate)
    }
    
    static {
      defaultInstance = new Authenticate(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.Authenticate)
  }
  
  public static final class Ping extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Ping.newBuilder() to construct.
    private Ping() {
      initFields();
    }
    private Ping(boolean noInit) {}
    
    private static final Ping defaultInstance;
    public static Ping getDefaultInstance() {
      return defaultInstance;
    }
    
    public Ping getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // optional uint32 good = 2;
    public static final int GOOD_FIELD_NUMBER = 2;
    private boolean hasGood;
    private int good_ = 0;
    public boolean hasGood() { return hasGood; }
    public int getGood() { return good_; }
    
    // optional uint32 late = 3;
    public static final int LATE_FIELD_NUMBER = 3;
    private boolean hasLate;
    private int late_ = 0;
    public boolean hasLate() { return hasLate; }
    public int getLate() { return late_; }
    
    // optional uint32 lost = 4;
    public static final int LOST_FIELD_NUMBER = 4;
    private boolean hasLost;
    private int lost_ = 0;
    public boolean hasLost() { return hasLost; }
    public int getLost() { return lost_; }
    
    // optional uint32 resync = 5;
    public static final int RESYNC_FIELD_NUMBER = 5;
    private boolean hasResync;
    private int resync_ = 0;
    public boolean hasResync() { return hasResync; }
    public int getResync() { return resync_; }
    
    // optional uint32 udp_packets = 6;
    public static final int UDP_PACKETS_FIELD_NUMBER = 6;
    private boolean hasUdpPackets;
    private int udpPackets_ = 0;
    public boolean hasUdpPackets() { return hasUdpPackets; }
    public int getUdpPackets() { return udpPackets_; }
    
    // optional uint32 tcp_packets = 7;
    public static final int TCP_PACKETS_FIELD_NUMBER = 7;
    private boolean hasTcpPackets;
    private int tcpPackets_ = 0;
    public boolean hasTcpPackets() { return hasTcpPackets; }
    public int getTcpPackets() { return tcpPackets_; }
    
    // optional float udp_ping_avg = 8;
    public static final int UDP_PING_AVG_FIELD_NUMBER = 8;
    private boolean hasUdpPingAvg;
    private float udpPingAvg_ = 0F;
    public boolean hasUdpPingAvg() { return hasUdpPingAvg; }
    public float getUdpPingAvg() { return udpPingAvg_; }
    
    // optional float udp_ping_var = 9;
    public static final int UDP_PING_VAR_FIELD_NUMBER = 9;
    private boolean hasUdpPingVar;
    private float udpPingVar_ = 0F;
    public boolean hasUdpPingVar() { return hasUdpPingVar; }
    public float getUdpPingVar() { return udpPingVar_; }
    
    // optional float tcp_ping_avg = 10;
    public static final int TCP_PING_AVG_FIELD_NUMBER = 10;
    private boolean hasTcpPingAvg;
    private float tcpPingAvg_ = 0F;
    public boolean hasTcpPingAvg() { return hasTcpPingAvg; }
    public float getTcpPingAvg() { return tcpPingAvg_; }
    
    // optional float tcp_ping_var = 11;
    public static final int TCP_PING_VAR_FIELD_NUMBER = 11;
    private boolean hasTcpPingVar;
    private float tcpPingVar_ = 0F;
    public boolean hasTcpPingVar() { return hasTcpPingVar; }
    public float getTcpPingVar() { return tcpPingVar_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTimestamp()) {
        output.writeUInt64(1, getTimestamp());
      }
      if (hasGood()) {
        output.writeUInt32(2, getGood());
      }
      if (hasLate()) {
        output.writeUInt32(3, getLate());
      }
      if (hasLost()) {
        output.writeUInt32(4, getLost());
      }
      if (hasResync()) {
        output.writeUInt32(5, getResync());
      }
      if (hasUdpPackets()) {
        output.writeUInt32(6, getUdpPackets());
      }
      if (hasTcpPackets()) {
        output.writeUInt32(7, getTcpPackets());
      }
      if (hasUdpPingAvg()) {
        output.writeFloat(8, getUdpPingAvg());
      }
      if (hasUdpPingVar()) {
        output.writeFloat(9, getUdpPingVar());
      }
      if (hasTcpPingAvg()) {
        output.writeFloat(10, getTcpPingAvg());
      }
      if (hasTcpPingVar()) {
        output.writeFloat(11, getTcpPingVar());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getTimestamp());
      }
      if (hasGood()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getGood());
      }
      if (hasLate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getLate());
      }
      if (hasLost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getLost());
      }
      if (hasResync()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getResync());
      }
      if (hasUdpPackets()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getUdpPackets());
      }
      if (hasTcpPackets()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getTcpPackets());
      }
      if (hasUdpPingAvg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, getUdpPingAvg());
      }
      if (hasUdpPingVar()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, getUdpPingVar());
      }
      if (hasTcpPingAvg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getTcpPingAvg());
      }
      if (hasTcpPingVar()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getTcpPingVar());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.Ping, Builder> {
      private com.sapta.htonline.MumbleProto.Ping result;
      
      // Construct using com.example.mumbleclient.MumbleProto.Ping.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.Ping();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.Ping internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.Ping();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.Ping getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.Ping.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.Ping build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.Ping buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.Ping buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.Ping returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.Ping other) {
        if (other == com.sapta.htonline.MumbleProto.Ping.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasGood()) {
          setGood(other.getGood());
        }
        if (other.hasLate()) {
          setLate(other.getLate());
        }
        if (other.hasLost()) {
          setLost(other.getLost());
        }
        if (other.hasResync()) {
          setResync(other.getResync());
        }
        if (other.hasUdpPackets()) {
          setUdpPackets(other.getUdpPackets());
        }
        if (other.hasTcpPackets()) {
          setTcpPackets(other.getTcpPackets());
        }
        if (other.hasUdpPingAvg()) {
          setUdpPingAvg(other.getUdpPingAvg());
        }
        if (other.hasUdpPingVar()) {
          setUdpPingVar(other.getUdpPingVar());
        }
        if (other.hasTcpPingAvg()) {
          setTcpPingAvg(other.getTcpPingAvg());
        }
        if (other.hasTcpPingVar()) {
          setTcpPingVar(other.getTcpPingVar());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setTimestamp(input.readUInt64());
              break;
            }
            case 16: {
              setGood(input.readUInt32());
              break;
            }
            case 24: {
              setLate(input.readUInt32());
              break;
            }
            case 32: {
              setLost(input.readUInt32());
              break;
            }
            case 40: {
              setResync(input.readUInt32());
              break;
            }
            case 48: {
              setUdpPackets(input.readUInt32());
              break;
            }
            case 56: {
              setTcpPackets(input.readUInt32());
              break;
            }
            case 69: {
              setUdpPingAvg(input.readFloat());
              break;
            }
            case 77: {
              setUdpPingVar(input.readFloat());
              break;
            }
            case 85: {
              setTcpPingAvg(input.readFloat());
              break;
            }
            case 93: {
              setTcpPingVar(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // optional uint32 good = 2;
      public boolean hasGood() {
        return result.hasGood();
      }
      public int getGood() {
        return result.getGood();
      }
      public Builder setGood(int value) {
        result.hasGood = true;
        result.good_ = value;
        return this;
      }
      public Builder clearGood() {
        result.hasGood = false;
        result.good_ = 0;
        return this;
      }
      
      // optional uint32 late = 3;
      public boolean hasLate() {
        return result.hasLate();
      }
      public int getLate() {
        return result.getLate();
      }
      public Builder setLate(int value) {
        result.hasLate = true;
        result.late_ = value;
        return this;
      }
      public Builder clearLate() {
        result.hasLate = false;
        result.late_ = 0;
        return this;
      }
      
      // optional uint32 lost = 4;
      public boolean hasLost() {
        return result.hasLost();
      }
      public int getLost() {
        return result.getLost();
      }
      public Builder setLost(int value) {
        result.hasLost = true;
        result.lost_ = value;
        return this;
      }
      public Builder clearLost() {
        result.hasLost = false;
        result.lost_ = 0;
        return this;
      }
      
      // optional uint32 resync = 5;
      public boolean hasResync() {
        return result.hasResync();
      }
      public int getResync() {
        return result.getResync();
      }
      public Builder setResync(int value) {
        result.hasResync = true;
        result.resync_ = value;
        return this;
      }
      public Builder clearResync() {
        result.hasResync = false;
        result.resync_ = 0;
        return this;
      }
      
      // optional uint32 udp_packets = 6;
      public boolean hasUdpPackets() {
        return result.hasUdpPackets();
      }
      public int getUdpPackets() {
        return result.getUdpPackets();
      }
      public Builder setUdpPackets(int value) {
        result.hasUdpPackets = true;
        result.udpPackets_ = value;
        return this;
      }
      public Builder clearUdpPackets() {
        result.hasUdpPackets = false;
        result.udpPackets_ = 0;
        return this;
      }
      
      // optional uint32 tcp_packets = 7;
      public boolean hasTcpPackets() {
        return result.hasTcpPackets();
      }
      public int getTcpPackets() {
        return result.getTcpPackets();
      }
      public Builder setTcpPackets(int value) {
        result.hasTcpPackets = true;
        result.tcpPackets_ = value;
        return this;
      }
      public Builder clearTcpPackets() {
        result.hasTcpPackets = false;
        result.tcpPackets_ = 0;
        return this;
      }
      
      // optional float udp_ping_avg = 8;
      public boolean hasUdpPingAvg() {
        return result.hasUdpPingAvg();
      }
      public float getUdpPingAvg() {
        return result.getUdpPingAvg();
      }
      public Builder setUdpPingAvg(float value) {
        result.hasUdpPingAvg = true;
        result.udpPingAvg_ = value;
        return this;
      }
      public Builder clearUdpPingAvg() {
        result.hasUdpPingAvg = false;
        result.udpPingAvg_ = 0F;
        return this;
      }
      
      // optional float udp_ping_var = 9;
      public boolean hasUdpPingVar() {
        return result.hasUdpPingVar();
      }
      public float getUdpPingVar() {
        return result.getUdpPingVar();
      }
      public Builder setUdpPingVar(float value) {
        result.hasUdpPingVar = true;
        result.udpPingVar_ = value;
        return this;
      }
      public Builder clearUdpPingVar() {
        result.hasUdpPingVar = false;
        result.udpPingVar_ = 0F;
        return this;
      }
      
      // optional float tcp_ping_avg = 10;
      public boolean hasTcpPingAvg() {
        return result.hasTcpPingAvg();
      }
      public float getTcpPingAvg() {
        return result.getTcpPingAvg();
      }
      public Builder setTcpPingAvg(float value) {
        result.hasTcpPingAvg = true;
        result.tcpPingAvg_ = value;
        return this;
      }
      public Builder clearTcpPingAvg() {
        result.hasTcpPingAvg = false;
        result.tcpPingAvg_ = 0F;
        return this;
      }
      
      // optional float tcp_ping_var = 11;
      public boolean hasTcpPingVar() {
        return result.hasTcpPingVar();
      }
      public float getTcpPingVar() {
        return result.getTcpPingVar();
      }
      public Builder setTcpPingVar(float value) {
        result.hasTcpPingVar = true;
        result.tcpPingVar_ = value;
        return this;
      }
      public Builder clearTcpPingVar() {
        result.hasTcpPingVar = false;
        result.tcpPingVar_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.Ping)
    }
    
    static {
      defaultInstance = new Ping(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.Ping)
  }
  
  public static final class Reject extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Reject.newBuilder() to construct.
    private Reject() {
      initFields();
    }
    private Reject(boolean noInit) {}
    
    private static final Reject defaultInstance;
    public static Reject getDefaultInstance() {
      return defaultInstance;
    }
    
    public Reject getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum RejectType
        implements com.google.protobuf.Internal.EnumLite {
      None(0, 0),
      WrongVersion(1, 1),
      InvalidUsername(2, 2),
      WrongUserPW(3, 3),
      WrongServerPW(4, 4),
      UsernameInUse(5, 5),
      ServerFull(6, 6),
      NoCertificate(7, 7),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static RejectType valueOf(int value) {
        switch (value) {
          case 0: return None;
          case 1: return WrongVersion;
          case 2: return InvalidUsername;
          case 3: return WrongUserPW;
          case 4: return WrongServerPW;
          case 5: return UsernameInUse;
          case 6: return ServerFull;
          case 7: return NoCertificate;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RejectType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RejectType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RejectType>() {
              public RejectType findValueByNumber(int number) {
                return RejectType.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private RejectType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MumbleProto.Reject.RejectType)
    }
    
    // optional .MumbleProto.Reject.RejectType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private com.sapta.htonline.MumbleProto.Reject.RejectType type_;
    public boolean hasType() { return hasType; }
    public com.sapta.htonline.MumbleProto.Reject.RejectType getType() { return type_; }
    
    // optional string reason = 2;
    public static final int REASON_FIELD_NUMBER = 2;
    private boolean hasReason;
    private String reason_ = "";
    public boolean hasReason() { return hasReason; }
    public String getReason() { return reason_; }
    
    private void initFields() {
      type_ = com.sapta.htonline.MumbleProto.Reject.RejectType.None;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasReason()) {
        output.writeString(2, getReason());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getReason());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Reject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.Reject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.Reject prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.Reject, Builder> {
      private com.sapta.htonline.MumbleProto.Reject result;
      
      // Construct using com.example.mumbleclient.MumbleProto.Reject.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.Reject();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.Reject internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.Reject();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.Reject getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.Reject.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.Reject build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.Reject buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.Reject buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.Reject returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.Reject other) {
        if (other == com.sapta.htonline.MumbleProto.Reject.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.sapta.htonline.MumbleProto.Reject.RejectType value = com.sapta.htonline.MumbleProto.Reject.RejectType.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 18: {
              setReason(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional .MumbleProto.Reject.RejectType type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public com.sapta.htonline.MumbleProto.Reject.RejectType getType() {
        return result.getType();
      }
      public Builder setType(com.sapta.htonline.MumbleProto.Reject.RejectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.sapta.htonline.MumbleProto.Reject.RejectType.None;
        return this;
      }
      
      // optional string reason = 2;
      public boolean hasReason() {
        return result.hasReason();
      }
      public String getReason() {
        return result.getReason();
      }
      public Builder setReason(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = getDefaultInstance().getReason();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.Reject)
    }
    
    static {
      defaultInstance = new Reject(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.Reject)
  }
  
  public static final class ServerConfig extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ServerConfig.newBuilder() to construct.
    private ServerConfig() {
      initFields();
    }
    private ServerConfig(boolean noInit) {}
    
    private static final ServerConfig defaultInstance;
    public static ServerConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 max_bandwidth = 1;
    public static final int MAX_BANDWIDTH_FIELD_NUMBER = 1;
    private boolean hasMaxBandwidth;
    private int maxBandwidth_ = 0;
    public boolean hasMaxBandwidth() { return hasMaxBandwidth; }
    public int getMaxBandwidth() { return maxBandwidth_; }
    
    // optional string welcome_text = 2;
    public static final int WELCOME_TEXT_FIELD_NUMBER = 2;
    private boolean hasWelcomeText;
    private String welcomeText_ = "";
    public boolean hasWelcomeText() { return hasWelcomeText; }
    public String getWelcomeText() { return welcomeText_; }
    
    // optional bool allow_html = 3;
    public static final int ALLOW_HTML_FIELD_NUMBER = 3;
    private boolean hasAllowHtml;
    private boolean allowHtml_ = false;
    public boolean hasAllowHtml() { return hasAllowHtml; }
    public boolean getAllowHtml() { return allowHtml_; }
    
    // optional uint32 message_length = 4;
    public static final int MESSAGE_LENGTH_FIELD_NUMBER = 4;
    private boolean hasMessageLength;
    private int messageLength_ = 0;
    public boolean hasMessageLength() { return hasMessageLength; }
    public int getMessageLength() { return messageLength_; }
    
    // optional uint32 image_message_length = 5;
    public static final int IMAGE_MESSAGE_LENGTH_FIELD_NUMBER = 5;
    private boolean hasImageMessageLength;
    private int imageMessageLength_ = 0;
    public boolean hasImageMessageLength() { return hasImageMessageLength; }
    public int getImageMessageLength() { return imageMessageLength_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMaxBandwidth()) {
        output.writeUInt32(1, getMaxBandwidth());
      }
      if (hasWelcomeText()) {
        output.writeString(2, getWelcomeText());
      }
      if (hasAllowHtml()) {
        output.writeBool(3, getAllowHtml());
      }
      if (hasMessageLength()) {
        output.writeUInt32(4, getMessageLength());
      }
      if (hasImageMessageLength()) {
        output.writeUInt32(5, getImageMessageLength());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMaxBandwidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getMaxBandwidth());
      }
      if (hasWelcomeText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getWelcomeText());
      }
      if (hasAllowHtml()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getAllowHtml());
      }
      if (hasMessageLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getMessageLength());
      }
      if (hasImageMessageLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getImageMessageLength());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ServerConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ServerConfig, Builder> {
      private com.sapta.htonline.MumbleProto.ServerConfig result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ServerConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ServerConfig();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ServerConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ServerConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ServerConfig getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ServerConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ServerConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ServerConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ServerConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.ServerConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ServerConfig other) {
        if (other == com.sapta.htonline.MumbleProto.ServerConfig.getDefaultInstance()) return this;
        if (other.hasMaxBandwidth()) {
          setMaxBandwidth(other.getMaxBandwidth());
        }
        if (other.hasWelcomeText()) {
          setWelcomeText(other.getWelcomeText());
        }
        if (other.hasAllowHtml()) {
          setAllowHtml(other.getAllowHtml());
        }
        if (other.hasMessageLength()) {
          setMessageLength(other.getMessageLength());
        }
        if (other.hasImageMessageLength()) {
          setImageMessageLength(other.getImageMessageLength());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setMaxBandwidth(input.readUInt32());
              break;
            }
            case 18: {
              setWelcomeText(input.readString());
              break;
            }
            case 24: {
              setAllowHtml(input.readBool());
              break;
            }
            case 32: {
              setMessageLength(input.readUInt32());
              break;
            }
            case 40: {
              setImageMessageLength(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 max_bandwidth = 1;
      public boolean hasMaxBandwidth() {
        return result.hasMaxBandwidth();
      }
      public int getMaxBandwidth() {
        return result.getMaxBandwidth();
      }
      public Builder setMaxBandwidth(int value) {
        result.hasMaxBandwidth = true;
        result.maxBandwidth_ = value;
        return this;
      }
      public Builder clearMaxBandwidth() {
        result.hasMaxBandwidth = false;
        result.maxBandwidth_ = 0;
        return this;
      }
      
      // optional string welcome_text = 2;
      public boolean hasWelcomeText() {
        return result.hasWelcomeText();
      }
      public String getWelcomeText() {
        return result.getWelcomeText();
      }
      public Builder setWelcomeText(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWelcomeText = true;
        result.welcomeText_ = value;
        return this;
      }
      public Builder clearWelcomeText() {
        result.hasWelcomeText = false;
        result.welcomeText_ = getDefaultInstance().getWelcomeText();
        return this;
      }
      
      // optional bool allow_html = 3;
      public boolean hasAllowHtml() {
        return result.hasAllowHtml();
      }
      public boolean getAllowHtml() {
        return result.getAllowHtml();
      }
      public Builder setAllowHtml(boolean value) {
        result.hasAllowHtml = true;
        result.allowHtml_ = value;
        return this;
      }
      public Builder clearAllowHtml() {
        result.hasAllowHtml = false;
        result.allowHtml_ = false;
        return this;
      }
      
      // optional uint32 message_length = 4;
      public boolean hasMessageLength() {
        return result.hasMessageLength();
      }
      public int getMessageLength() {
        return result.getMessageLength();
      }
      public Builder setMessageLength(int value) {
        result.hasMessageLength = true;
        result.messageLength_ = value;
        return this;
      }
      public Builder clearMessageLength() {
        result.hasMessageLength = false;
        result.messageLength_ = 0;
        return this;
      }
      
      // optional uint32 image_message_length = 5;
      public boolean hasImageMessageLength() {
        return result.hasImageMessageLength();
      }
      public int getImageMessageLength() {
        return result.getImageMessageLength();
      }
      public Builder setImageMessageLength(int value) {
        result.hasImageMessageLength = true;
        result.imageMessageLength_ = value;
        return this;
      }
      public Builder clearImageMessageLength() {
        result.hasImageMessageLength = false;
        result.imageMessageLength_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ServerConfig)
    }
    
    static {
      defaultInstance = new ServerConfig(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ServerConfig)
  }
  
  public static final class ServerSync extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ServerSync.newBuilder() to construct.
    private ServerSync() {
      initFields();
    }
    private ServerSync(boolean noInit) {}
    
    private static final ServerSync defaultInstance;
    public static ServerSync getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerSync getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional uint32 max_bandwidth = 2;
    public static final int MAX_BANDWIDTH_FIELD_NUMBER = 2;
    private boolean hasMaxBandwidth;
    private int maxBandwidth_ = 0;
    public boolean hasMaxBandwidth() { return hasMaxBandwidth; }
    public int getMaxBandwidth() { return maxBandwidth_; }
    
    // optional string welcome_text = 3;
    public static final int WELCOME_TEXT_FIELD_NUMBER = 3;
    private boolean hasWelcomeText;
    private String welcomeText_ = "";
    public boolean hasWelcomeText() { return hasWelcomeText; }
    public String getWelcomeText() { return welcomeText_; }
    
    // optional uint64 permissions = 4;
    public static final int PERMISSIONS_FIELD_NUMBER = 4;
    private boolean hasPermissions;
    private long permissions_ = 0L;
    public boolean hasPermissions() { return hasPermissions; }
    public long getPermissions() { return permissions_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSession()) {
        output.writeUInt32(1, getSession());
      }
      if (hasMaxBandwidth()) {
        output.writeUInt32(2, getMaxBandwidth());
      }
      if (hasWelcomeText()) {
        output.writeString(3, getWelcomeText());
      }
      if (hasPermissions()) {
        output.writeUInt64(4, getPermissions());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSession());
      }
      if (hasMaxBandwidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getMaxBandwidth());
      }
      if (hasWelcomeText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getWelcomeText());
      }
      if (hasPermissions()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getPermissions());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ServerSync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ServerSync prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ServerSync, Builder> {
      private com.sapta.htonline.MumbleProto.ServerSync result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ServerSync.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ServerSync();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ServerSync internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ServerSync();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ServerSync getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ServerSync.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ServerSync build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ServerSync buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ServerSync buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.ServerSync returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ServerSync other) {
        if (other == com.sapta.htonline.MumbleProto.ServerSync.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasMaxBandwidth()) {
          setMaxBandwidth(other.getMaxBandwidth());
        }
        if (other.hasWelcomeText()) {
          setWelcomeText(other.getWelcomeText());
        }
        if (other.hasPermissions()) {
          setPermissions(other.getPermissions());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSession(input.readUInt32());
              break;
            }
            case 16: {
              setMaxBandwidth(input.readUInt32());
              break;
            }
            case 26: {
              setWelcomeText(input.readString());
              break;
            }
            case 32: {
              setPermissions(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 session = 1;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional uint32 max_bandwidth = 2;
      public boolean hasMaxBandwidth() {
        return result.hasMaxBandwidth();
      }
      public int getMaxBandwidth() {
        return result.getMaxBandwidth();
      }
      public Builder setMaxBandwidth(int value) {
        result.hasMaxBandwidth = true;
        result.maxBandwidth_ = value;
        return this;
      }
      public Builder clearMaxBandwidth() {
        result.hasMaxBandwidth = false;
        result.maxBandwidth_ = 0;
        return this;
      }
      
      // optional string welcome_text = 3;
      public boolean hasWelcomeText() {
        return result.hasWelcomeText();
      }
      public String getWelcomeText() {
        return result.getWelcomeText();
      }
      public Builder setWelcomeText(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWelcomeText = true;
        result.welcomeText_ = value;
        return this;
      }
      public Builder clearWelcomeText() {
        result.hasWelcomeText = false;
        result.welcomeText_ = getDefaultInstance().getWelcomeText();
        return this;
      }
      
      // optional uint64 permissions = 4;
      public boolean hasPermissions() {
        return result.hasPermissions();
      }
      public long getPermissions() {
        return result.getPermissions();
      }
      public Builder setPermissions(long value) {
        result.hasPermissions = true;
        result.permissions_ = value;
        return this;
      }
      public Builder clearPermissions() {
        result.hasPermissions = false;
        result.permissions_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ServerSync)
    }
    
    static {
      defaultInstance = new ServerSync(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ServerSync)
  }
  
  public static final class ChannelRemove extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ChannelRemove.newBuilder() to construct.
    private ChannelRemove() {
      initFields();
    }
    private ChannelRemove(boolean noInit) {}
    
    private static final ChannelRemove defaultInstance;
    public static ChannelRemove getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChannelRemove getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required uint32 channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeUInt32(1, getChannelId());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getChannelId());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelRemove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ChannelRemove prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ChannelRemove, Builder> {
      private com.sapta.htonline.MumbleProto.ChannelRemove result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ChannelRemove.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ChannelRemove();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ChannelRemove internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ChannelRemove();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ChannelRemove getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ChannelRemove.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ChannelRemove build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ChannelRemove buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ChannelRemove buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.ChannelRemove returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ChannelRemove other) {
        if (other == com.sapta.htonline.MumbleProto.ChannelRemove.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setChannelId(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ChannelRemove)
    }
    
    static {
      defaultInstance = new ChannelRemove(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ChannelRemove)
  }
  
  public static final class ChannelState extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ChannelState.newBuilder() to construct.
    private ChannelState() {
      initFields();
    }
    private ChannelState(boolean noInit) {}
    
    private static final ChannelState defaultInstance;
    public static ChannelState getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChannelState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // optional uint32 parent = 2;
    public static final int PARENT_FIELD_NUMBER = 2;
    private boolean hasParent;
    private int parent_ = 0;
    public boolean hasParent() { return hasParent; }
    public int getParent() { return parent_; }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private String name_ = "";
    public boolean hasName() { return hasName; }
    public String getName() { return name_; }
    
    // repeated uint32 links = 4;
    public static final int LINKS_FIELD_NUMBER = 4;
    private java.util.List<Integer> links_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getLinksList() {
      return links_;
    }
    public int getLinksCount() { return links_.size(); }
    public int getLinks(int index) {
      return links_.get(index);
    }
    
    // optional string description = 5;
    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private boolean hasDescription;
    private String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public String getDescription() { return description_; }
    
    // repeated uint32 links_add = 6;
    public static final int LINKS_ADD_FIELD_NUMBER = 6;
    private java.util.List<Integer> linksAdd_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getLinksAddList() {
      return linksAdd_;
    }
    public int getLinksAddCount() { return linksAdd_.size(); }
    public int getLinksAdd(int index) {
      return linksAdd_.get(index);
    }
    
    // repeated uint32 links_remove = 7;
    public static final int LINKS_REMOVE_FIELD_NUMBER = 7;
    private java.util.List<Integer> linksRemove_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getLinksRemoveList() {
      return linksRemove_;
    }
    public int getLinksRemoveCount() { return linksRemove_.size(); }
    public int getLinksRemove(int index) {
      return linksRemove_.get(index);
    }
    
    // optional bool temporary = 8 [default = false];
    public static final int TEMPORARY_FIELD_NUMBER = 8;
    private boolean hasTemporary;
    private boolean temporary_ = false;
    public boolean hasTemporary() { return hasTemporary; }
    public boolean getTemporary() { return temporary_; }
    
    // optional int32 position = 9 [default = 0];
    public static final int POSITION_FIELD_NUMBER = 9;
    private boolean hasPosition;
    private int position_ = 0;
    public boolean hasPosition() { return hasPosition; }
    public int getPosition() { return position_; }
    
    // optional bytes description_hash = 10;
    public static final int DESCRIPTION_HASH_FIELD_NUMBER = 10;
    private boolean hasDescriptionHash;
    private com.google.protobuf.ByteString descriptionHash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasDescriptionHash() { return hasDescriptionHash; }
    public com.google.protobuf.ByteString getDescriptionHash() { return descriptionHash_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeUInt32(1, getChannelId());
      }
      if (hasParent()) {
        output.writeUInt32(2, getParent());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      for (int element : getLinksList()) {
        output.writeUInt32(4, element);
      }
      if (hasDescription()) {
        output.writeString(5, getDescription());
      }
      for (int element : getLinksAddList()) {
        output.writeUInt32(6, element);
      }
      for (int element : getLinksRemoveList()) {
        output.writeUInt32(7, element);
      }
      if (hasTemporary()) {
        output.writeBool(8, getTemporary());
      }
      if (hasPosition()) {
        output.writeInt32(9, getPosition());
      }
      if (hasDescriptionHash()) {
        output.writeBytes(10, getDescriptionHash());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getChannelId());
      }
      if (hasParent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getParent());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      {
        int dataSize = 0;
        for (int element : getLinksList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLinksList().size();
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDescription());
      }
      {
        int dataSize = 0;
        for (int element : getLinksAddList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLinksAddList().size();
      }
      {
        int dataSize = 0;
        for (int element : getLinksRemoveList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLinksRemoveList().size();
      }
      if (hasTemporary()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getTemporary());
      }
      if (hasPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getPosition());
      }
      if (hasDescriptionHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getDescriptionHash());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ChannelState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ChannelState, Builder> {
      private com.sapta.htonline.MumbleProto.ChannelState result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ChannelState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ChannelState();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ChannelState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ChannelState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ChannelState getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ChannelState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ChannelState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ChannelState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ChannelState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.links_ != java.util.Collections.EMPTY_LIST) {
          result.links_ =
            java.util.Collections.unmodifiableList(result.links_);
        }
        if (result.linksAdd_ != java.util.Collections.EMPTY_LIST) {
          result.linksAdd_ =
            java.util.Collections.unmodifiableList(result.linksAdd_);
        }
        if (result.linksRemove_ != java.util.Collections.EMPTY_LIST) {
          result.linksRemove_ =
            java.util.Collections.unmodifiableList(result.linksRemove_);
        }
        com.sapta.htonline.MumbleProto.ChannelState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ChannelState other) {
        if (other == com.sapta.htonline.MumbleProto.ChannelState.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasParent()) {
          setParent(other.getParent());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.links_.isEmpty()) {
          if (result.links_.isEmpty()) {
            result.links_ = new java.util.ArrayList<Integer>();
          }
          result.links_.addAll(other.links_);
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (!other.linksAdd_.isEmpty()) {
          if (result.linksAdd_.isEmpty()) {
            result.linksAdd_ = new java.util.ArrayList<Integer>();
          }
          result.linksAdd_.addAll(other.linksAdd_);
        }
        if (!other.linksRemove_.isEmpty()) {
          if (result.linksRemove_.isEmpty()) {
            result.linksRemove_ = new java.util.ArrayList<Integer>();
          }
          result.linksRemove_.addAll(other.linksRemove_);
        }
        if (other.hasTemporary()) {
          setTemporary(other.getTemporary());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasDescriptionHash()) {
          setDescriptionHash(other.getDescriptionHash());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setChannelId(input.readUInt32());
              break;
            }
            case 16: {
              setParent(input.readUInt32());
              break;
            }
            case 26: {
              setName(input.readString());
              break;
            }
            case 32: {
              addLinks(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLinks(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              setDescription(input.readString());
              break;
            }
            case 48: {
              addLinksAdd(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLinksAdd(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              addLinksRemove(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLinksRemove(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              setTemporary(input.readBool());
              break;
            }
            case 72: {
              setPosition(input.readInt32());
              break;
            }
            case 82: {
              setDescriptionHash(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // optional uint32 parent = 2;
      public boolean hasParent() {
        return result.hasParent();
      }
      public int getParent() {
        return result.getParent();
      }
      public Builder setParent(int value) {
        result.hasParent = true;
        result.parent_ = value;
        return this;
      }
      public Builder clearParent() {
        result.hasParent = false;
        result.parent_ = 0;
        return this;
      }
      
      // optional string name = 3;
      public boolean hasName() {
        return result.hasName();
      }
      public String getName() {
        return result.getName();
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated uint32 links = 4;
      public java.util.List<Integer> getLinksList() {
        return java.util.Collections.unmodifiableList(result.links_);
      }
      public int getLinksCount() {
        return result.getLinksCount();
      }
      public int getLinks(int index) {
        return result.getLinks(index);
      }
      public Builder setLinks(int index, int value) {
        result.links_.set(index, value);
        return this;
      }
      public Builder addLinks(int value) {
        if (result.links_.isEmpty()) {
          result.links_ = new java.util.ArrayList<Integer>();
        }
        result.links_.add(value);
        return this;
      }
      public Builder addAllLinks(
          Iterable<? extends Integer> values) {
        if (result.links_.isEmpty()) {
          result.links_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.links_);
        return this;
      }
      public Builder clearLinks() {
        result.links_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string description = 5;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // repeated uint32 links_add = 6;
      public java.util.List<Integer> getLinksAddList() {
        return java.util.Collections.unmodifiableList(result.linksAdd_);
      }
      public int getLinksAddCount() {
        return result.getLinksAddCount();
      }
      public int getLinksAdd(int index) {
        return result.getLinksAdd(index);
      }
      public Builder setLinksAdd(int index, int value) {
        result.linksAdd_.set(index, value);
        return this;
      }
      public Builder addLinksAdd(int value) {
        if (result.linksAdd_.isEmpty()) {
          result.linksAdd_ = new java.util.ArrayList<Integer>();
        }
        result.linksAdd_.add(value);
        return this;
      }
      public Builder addAllLinksAdd(
          Iterable<? extends Integer> values) {
        if (result.linksAdd_.isEmpty()) {
          result.linksAdd_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.linksAdd_);
        return this;
      }
      public Builder clearLinksAdd() {
        result.linksAdd_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 links_remove = 7;
      public java.util.List<Integer> getLinksRemoveList() {
        return java.util.Collections.unmodifiableList(result.linksRemove_);
      }
      public int getLinksRemoveCount() {
        return result.getLinksRemoveCount();
      }
      public int getLinksRemove(int index) {
        return result.getLinksRemove(index);
      }
      public Builder setLinksRemove(int index, int value) {
        result.linksRemove_.set(index, value);
        return this;
      }
      public Builder addLinksRemove(int value) {
        if (result.linksRemove_.isEmpty()) {
          result.linksRemove_ = new java.util.ArrayList<Integer>();
        }
        result.linksRemove_.add(value);
        return this;
      }
      public Builder addAllLinksRemove(
          Iterable<? extends Integer> values) {
        if (result.linksRemove_.isEmpty()) {
          result.linksRemove_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.linksRemove_);
        return this;
      }
      public Builder clearLinksRemove() {
        result.linksRemove_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool temporary = 8 [default = false];
      public boolean hasTemporary() {
        return result.hasTemporary();
      }
      public boolean getTemporary() {
        return result.getTemporary();
      }
      public Builder setTemporary(boolean value) {
        result.hasTemporary = true;
        result.temporary_ = value;
        return this;
      }
      public Builder clearTemporary() {
        result.hasTemporary = false;
        result.temporary_ = false;
        return this;
      }
      
      // optional int32 position = 9 [default = 0];
      public boolean hasPosition() {
        return result.hasPosition();
      }
      public int getPosition() {
        return result.getPosition();
      }
      public Builder setPosition(int value) {
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder clearPosition() {
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      // optional bytes description_hash = 10;
      public boolean hasDescriptionHash() {
        return result.hasDescriptionHash();
      }
      public com.google.protobuf.ByteString getDescriptionHash() {
        return result.getDescriptionHash();
      }
      public Builder setDescriptionHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescriptionHash = true;
        result.descriptionHash_ = value;
        return this;
      }
      public Builder clearDescriptionHash() {
        result.hasDescriptionHash = false;
        result.descriptionHash_ = getDefaultInstance().getDescriptionHash();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ChannelState)
    }
    
    static {
      defaultInstance = new ChannelState(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ChannelState)
  }
  
  public static final class UserRemove extends
      com.google.protobuf.GeneratedMessageLite {
    // Use UserRemove.newBuilder() to construct.
    private UserRemove() {
      initFields();
    }
    private UserRemove(boolean noInit) {}
    
    private static final UserRemove defaultInstance;
    public static UserRemove getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserRemove getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required uint32 session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional uint32 actor = 2;
    public static final int ACTOR_FIELD_NUMBER = 2;
    private boolean hasActor;
    private int actor_ = 0;
    public boolean hasActor() { return hasActor; }
    public int getActor() { return actor_; }
    
    // optional string reason = 3;
    public static final int REASON_FIELD_NUMBER = 3;
    private boolean hasReason;
    private String reason_ = "";
    public boolean hasReason() { return hasReason; }
    public String getReason() { return reason_; }
    
    // optional bool ban = 4;
    public static final int BAN_FIELD_NUMBER = 4;
    private boolean hasBan;
    private boolean ban_ = false;
    public boolean hasBan() { return hasBan; }
    public boolean getBan() { return ban_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSession) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSession()) {
        output.writeUInt32(1, getSession());
      }
      if (hasActor()) {
        output.writeUInt32(2, getActor());
      }
      if (hasReason()) {
        output.writeString(3, getReason());
      }
      if (hasBan()) {
        output.writeBool(4, getBan());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSession());
      }
      if (hasActor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getActor());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getReason());
      }
      if (hasBan()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getBan());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserRemove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserRemove prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.UserRemove, Builder> {
      private com.sapta.htonline.MumbleProto.UserRemove result;
      
      // Construct using com.example.mumbleclient.MumbleProto.UserRemove.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.UserRemove();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.UserRemove internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.UserRemove();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.UserRemove getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.UserRemove.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.UserRemove build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.UserRemove buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.UserRemove buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.UserRemove returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserRemove other) {
        if (other == com.sapta.htonline.MumbleProto.UserRemove.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasActor()) {
          setActor(other.getActor());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (other.hasBan()) {
          setBan(other.getBan());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSession(input.readUInt32());
              break;
            }
            case 16: {
              setActor(input.readUInt32());
              break;
            }
            case 26: {
              setReason(input.readString());
              break;
            }
            case 32: {
              setBan(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required uint32 session = 1;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional uint32 actor = 2;
      public boolean hasActor() {
        return result.hasActor();
      }
      public int getActor() {
        return result.getActor();
      }
      public Builder setActor(int value) {
        result.hasActor = true;
        result.actor_ = value;
        return this;
      }
      public Builder clearActor() {
        result.hasActor = false;
        result.actor_ = 0;
        return this;
      }
      
      // optional string reason = 3;
      public boolean hasReason() {
        return result.hasReason();
      }
      public String getReason() {
        return result.getReason();
      }
      public Builder setReason(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = getDefaultInstance().getReason();
        return this;
      }
      
      // optional bool ban = 4;
      public boolean hasBan() {
        return result.hasBan();
      }
      public boolean getBan() {
        return result.getBan();
      }
      public Builder setBan(boolean value) {
        result.hasBan = true;
        result.ban_ = value;
        return this;
      }
      public Builder clearBan() {
        result.hasBan = false;
        result.ban_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.UserRemove)
    }
    
    static {
      defaultInstance = new UserRemove(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.UserRemove)
  }
  
  public static final class UserState extends
      com.google.protobuf.GeneratedMessageLite {
    // Use UserState.newBuilder() to construct.
    private UserState() {
      initFields();
    }
    private UserState(boolean noInit) {}
    
    private static final UserState defaultInstance;
    public static UserState getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional uint32 actor = 2;
    public static final int ACTOR_FIELD_NUMBER = 2;
    private boolean hasActor;
    private int actor_ = 0;
    public boolean hasActor() { return hasActor; }
    public int getActor() { return actor_; }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private String name_ = "";
    public boolean hasName() { return hasName; }
    public String getName() { return name_; }
    
    // optional uint32 user_id = 4;
    public static final int USER_ID_FIELD_NUMBER = 4;
    private boolean hasUserId;
    private int userId_ = 0;
    public boolean hasUserId() { return hasUserId; }
    public int getUserId() { return userId_; }
    
    // optional uint32 channel_id = 5;
    public static final int CHANNEL_ID_FIELD_NUMBER = 5;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // optional bool mute = 6;
    public static final int MUTE_FIELD_NUMBER = 6;
    private boolean hasMute;
    private boolean mute_ = false;
    public boolean hasMute() { return hasMute; }
    public boolean getMute() { return mute_; }
    
    // optional bool deaf = 7;
    public static final int DEAF_FIELD_NUMBER = 7;
    private boolean hasDeaf;
    private boolean deaf_ = false;
    public boolean hasDeaf() { return hasDeaf; }
    public boolean getDeaf() { return deaf_; }
    
    // optional bool suppress = 8;
    public static final int SUPPRESS_FIELD_NUMBER = 8;
    private boolean hasSuppress;
    private boolean suppress_ = false;
    public boolean hasSuppress() { return hasSuppress; }
    public boolean getSuppress() { return suppress_; }
    
    // optional bool self_mute = 9;
    public static final int SELF_MUTE_FIELD_NUMBER = 9;
    private boolean hasSelfMute;
    private boolean selfMute_ = false;
    public boolean hasSelfMute() { return hasSelfMute; }
    public boolean getSelfMute() { return selfMute_; }
    
    // optional bool self_deaf = 10;
    public static final int SELF_DEAF_FIELD_NUMBER = 10;
    private boolean hasSelfDeaf;
    private boolean selfDeaf_ = false;
    public boolean hasSelfDeaf() { return hasSelfDeaf; }
    public boolean getSelfDeaf() { return selfDeaf_; }
    
    // optional bytes texture = 11;
    public static final int TEXTURE_FIELD_NUMBER = 11;
    private boolean hasTexture;
    private com.google.protobuf.ByteString texture_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTexture() { return hasTexture; }
    public com.google.protobuf.ByteString getTexture() { return texture_; }
    
    // optional bytes plugin_context = 12;
    public static final int PLUGIN_CONTEXT_FIELD_NUMBER = 12;
    private boolean hasPluginContext;
    private com.google.protobuf.ByteString pluginContext_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPluginContext() { return hasPluginContext; }
    public com.google.protobuf.ByteString getPluginContext() { return pluginContext_; }
    
    // optional string plugin_identity = 13;
    public static final int PLUGIN_IDENTITY_FIELD_NUMBER = 13;
    private boolean hasPluginIdentity;
    private String pluginIdentity_ = "";
    public boolean hasPluginIdentity() { return hasPluginIdentity; }
    public String getPluginIdentity() { return pluginIdentity_; }
    
    // optional string comment = 14;
    public static final int COMMENT_FIELD_NUMBER = 14;
    private boolean hasComment;
    private String comment_ = "";
    public boolean hasComment() { return hasComment; }
    public String getComment() { return comment_; }
    
    // optional string hash = 15;
    public static final int HASH_FIELD_NUMBER = 15;
    private boolean hasHash;
    private String hash_ = "";
    public boolean hasHash() { return hasHash; }
    public String getHash() { return hash_; }
    
    // optional bytes comment_hash = 16;
    public static final int COMMENT_HASH_FIELD_NUMBER = 16;
    private boolean hasCommentHash;
    private com.google.protobuf.ByteString commentHash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasCommentHash() { return hasCommentHash; }
    public com.google.protobuf.ByteString getCommentHash() { return commentHash_; }
    
    // optional bytes texture_hash = 17;
    public static final int TEXTURE_HASH_FIELD_NUMBER = 17;
    private boolean hasTextureHash;
    private com.google.protobuf.ByteString textureHash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTextureHash() { return hasTextureHash; }
    public com.google.protobuf.ByteString getTextureHash() { return textureHash_; }
    
    // optional bool priority_speaker = 18;
    public static final int PRIORITY_SPEAKER_FIELD_NUMBER = 18;
    private boolean hasPrioritySpeaker;
    private boolean prioritySpeaker_ = false;
    public boolean hasPrioritySpeaker() { return hasPrioritySpeaker; }
    public boolean getPrioritySpeaker() { return prioritySpeaker_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSession()) {
        output.writeUInt32(1, getSession());
      }
      if (hasActor()) {
        output.writeUInt32(2, getActor());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      if (hasUserId()) {
        output.writeUInt32(4, getUserId());
      }
      if (hasChannelId()) {
        output.writeUInt32(5, getChannelId());
      }
      if (hasMute()) {
        output.writeBool(6, getMute());
      }
      if (hasDeaf()) {
        output.writeBool(7, getDeaf());
      }
      if (hasSuppress()) {
        output.writeBool(8, getSuppress());
      }
      if (hasSelfMute()) {
        output.writeBool(9, getSelfMute());
      }
      if (hasSelfDeaf()) {
        output.writeBool(10, getSelfDeaf());
      }
      if (hasTexture()) {
        output.writeBytes(11, getTexture());
      }
      if (hasPluginContext()) {
        output.writeBytes(12, getPluginContext());
      }
      if (hasPluginIdentity()) {
        output.writeString(13, getPluginIdentity());
      }
      if (hasComment()) {
        output.writeString(14, getComment());
      }
      if (hasHash()) {
        output.writeString(15, getHash());
      }
      if (hasCommentHash()) {
        output.writeBytes(16, getCommentHash());
      }
      if (hasTextureHash()) {
        output.writeBytes(17, getTextureHash());
      }
      if (hasPrioritySpeaker()) {
        output.writeBool(18, getPrioritySpeaker());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSession());
      }
      if (hasActor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getActor());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      if (hasUserId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getUserId());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getChannelId());
      }
      if (hasMute()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getMute());
      }
      if (hasDeaf()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getDeaf());
      }
      if (hasSuppress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getSuppress());
      }
      if (hasSelfMute()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getSelfMute());
      }
      if (hasSelfDeaf()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, getSelfDeaf());
      }
      if (hasTexture()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getTexture());
      }
      if (hasPluginContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPluginContext());
      }
      if (hasPluginIdentity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getPluginIdentity());
      }
      if (hasComment()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getComment());
      }
      if (hasHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(15, getHash());
      }
      if (hasCommentHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getCommentHash());
      }
      if (hasTextureHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getTextureHash());
      }
      if (hasPrioritySpeaker()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, getPrioritySpeaker());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.UserState, Builder> {
      private com.sapta.htonline.MumbleProto.UserState result;
      
      // Construct using com.example.mumbleclient.MumbleProto.UserState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.UserState();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.UserState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.UserState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.UserState getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.UserState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.UserState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.UserState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.UserState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.UserState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserState other) {
        if (other == com.sapta.htonline.MumbleProto.UserState.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasActor()) {
          setActor(other.getActor());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasMute()) {
          setMute(other.getMute());
        }
        if (other.hasDeaf()) {
          setDeaf(other.getDeaf());
        }
        if (other.hasSuppress()) {
          setSuppress(other.getSuppress());
        }
        if (other.hasSelfMute()) {
          setSelfMute(other.getSelfMute());
        }
        if (other.hasSelfDeaf()) {
          setSelfDeaf(other.getSelfDeaf());
        }
        if (other.hasTexture()) {
          setTexture(other.getTexture());
        }
        if (other.hasPluginContext()) {
          setPluginContext(other.getPluginContext());
        }
        if (other.hasPluginIdentity()) {
          setPluginIdentity(other.getPluginIdentity());
        }
        if (other.hasComment()) {
          setComment(other.getComment());
        }
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        if (other.hasCommentHash()) {
          setCommentHash(other.getCommentHash());
        }
        if (other.hasTextureHash()) {
          setTextureHash(other.getTextureHash());
        }
        if (other.hasPrioritySpeaker()) {
          setPrioritySpeaker(other.getPrioritySpeaker());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSession(input.readUInt32());
              break;
            }
            case 16: {
              setActor(input.readUInt32());
              break;
            }
            case 26: {
              setName(input.readString());
              break;
            }
            case 32: {
              setUserId(input.readUInt32());
              break;
            }
            case 40: {
              setChannelId(input.readUInt32());
              break;
            }
            case 48: {
              setMute(input.readBool());
              break;
            }
            case 56: {
              setDeaf(input.readBool());
              break;
            }
            case 64: {
              setSuppress(input.readBool());
              break;
            }
            case 72: {
              setSelfMute(input.readBool());
              break;
            }
            case 80: {
              setSelfDeaf(input.readBool());
              break;
            }
            case 90: {
              setTexture(input.readBytes());
              break;
            }
            case 98: {
              setPluginContext(input.readBytes());
              break;
            }
            case 106: {
              setPluginIdentity(input.readString());
              break;
            }
            case 114: {
              setComment(input.readString());
              break;
            }
            case 122: {
              setHash(input.readString());
              break;
            }
            case 130: {
              setCommentHash(input.readBytes());
              break;
            }
            case 138: {
              setTextureHash(input.readBytes());
              break;
            }
            case 144: {
              setPrioritySpeaker(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 session = 1;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional uint32 actor = 2;
      public boolean hasActor() {
        return result.hasActor();
      }
      public int getActor() {
        return result.getActor();
      }
      public Builder setActor(int value) {
        result.hasActor = true;
        result.actor_ = value;
        return this;
      }
      public Builder clearActor() {
        result.hasActor = false;
        result.actor_ = 0;
        return this;
      }
      
      // optional string name = 3;
      public boolean hasName() {
        return result.hasName();
      }
      public String getName() {
        return result.getName();
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional uint32 user_id = 4;
      public boolean hasUserId() {
        return result.hasUserId();
      }
      public int getUserId() {
        return result.getUserId();
      }
      public Builder setUserId(int value) {
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder clearUserId() {
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      // optional uint32 channel_id = 5;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // optional bool mute = 6;
      public boolean hasMute() {
        return result.hasMute();
      }
      public boolean getMute() {
        return result.getMute();
      }
      public Builder setMute(boolean value) {
        result.hasMute = true;
        result.mute_ = value;
        return this;
      }
      public Builder clearMute() {
        result.hasMute = false;
        result.mute_ = false;
        return this;
      }
      
      // optional bool deaf = 7;
      public boolean hasDeaf() {
        return result.hasDeaf();
      }
      public boolean getDeaf() {
        return result.getDeaf();
      }
      public Builder setDeaf(boolean value) {
        result.hasDeaf = true;
        result.deaf_ = value;
        return this;
      }
      public Builder clearDeaf() {
        result.hasDeaf = false;
        result.deaf_ = false;
        return this;
      }
      
      // optional bool suppress = 8;
      public boolean hasSuppress() {
        return result.hasSuppress();
      }
      public boolean getSuppress() {
        return result.getSuppress();
      }
      public Builder setSuppress(boolean value) {
        result.hasSuppress = true;
        result.suppress_ = value;
        return this;
      }
      public Builder clearSuppress() {
        result.hasSuppress = false;
        result.suppress_ = false;
        return this;
      }
      
      // optional bool self_mute = 9;
      public boolean hasSelfMute() {
        return result.hasSelfMute();
      }
      public boolean getSelfMute() {
        return result.getSelfMute();
      }
      public Builder setSelfMute(boolean value) {
        result.hasSelfMute = true;
        result.selfMute_ = value;
        return this;
      }
      public Builder clearSelfMute() {
        result.hasSelfMute = false;
        result.selfMute_ = false;
        return this;
      }
      
      // optional bool self_deaf = 10;
      public boolean hasSelfDeaf() {
        return result.hasSelfDeaf();
      }
      public boolean getSelfDeaf() {
        return result.getSelfDeaf();
      }
      public Builder setSelfDeaf(boolean value) {
        result.hasSelfDeaf = true;
        result.selfDeaf_ = value;
        return this;
      }
      public Builder clearSelfDeaf() {
        result.hasSelfDeaf = false;
        result.selfDeaf_ = false;
        return this;
      }
      
      // optional bytes texture = 11;
      public boolean hasTexture() {
        return result.hasTexture();
      }
      public com.google.protobuf.ByteString getTexture() {
        return result.getTexture();
      }
      public Builder setTexture(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTexture = true;
        result.texture_ = value;
        return this;
      }
      public Builder clearTexture() {
        result.hasTexture = false;
        result.texture_ = getDefaultInstance().getTexture();
        return this;
      }
      
      // optional bytes plugin_context = 12;
      public boolean hasPluginContext() {
        return result.hasPluginContext();
      }
      public com.google.protobuf.ByteString getPluginContext() {
        return result.getPluginContext();
      }
      public Builder setPluginContext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPluginContext = true;
        result.pluginContext_ = value;
        return this;
      }
      public Builder clearPluginContext() {
        result.hasPluginContext = false;
        result.pluginContext_ = getDefaultInstance().getPluginContext();
        return this;
      }
      
      // optional string plugin_identity = 13;
      public boolean hasPluginIdentity() {
        return result.hasPluginIdentity();
      }
      public String getPluginIdentity() {
        return result.getPluginIdentity();
      }
      public Builder setPluginIdentity(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPluginIdentity = true;
        result.pluginIdentity_ = value;
        return this;
      }
      public Builder clearPluginIdentity() {
        result.hasPluginIdentity = false;
        result.pluginIdentity_ = getDefaultInstance().getPluginIdentity();
        return this;
      }
      
      // optional string comment = 14;
      public boolean hasComment() {
        return result.hasComment();
      }
      public String getComment() {
        return result.getComment();
      }
      public Builder setComment(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasComment = true;
        result.comment_ = value;
        return this;
      }
      public Builder clearComment() {
        result.hasComment = false;
        result.comment_ = getDefaultInstance().getComment();
        return this;
      }
      
      // optional string hash = 15;
      public boolean hasHash() {
        return result.hasHash();
      }
      public String getHash() {
        return result.getHash();
      }
      public Builder setHash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder clearHash() {
        result.hasHash = false;
        result.hash_ = getDefaultInstance().getHash();
        return this;
      }
      
      // optional bytes comment_hash = 16;
      public boolean hasCommentHash() {
        return result.hasCommentHash();
      }
      public com.google.protobuf.ByteString getCommentHash() {
        return result.getCommentHash();
      }
      public Builder setCommentHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCommentHash = true;
        result.commentHash_ = value;
        return this;
      }
      public Builder clearCommentHash() {
        result.hasCommentHash = false;
        result.commentHash_ = getDefaultInstance().getCommentHash();
        return this;
      }
      
      // optional bytes texture_hash = 17;
      public boolean hasTextureHash() {
        return result.hasTextureHash();
      }
      public com.google.protobuf.ByteString getTextureHash() {
        return result.getTextureHash();
      }
      public Builder setTextureHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTextureHash = true;
        result.textureHash_ = value;
        return this;
      }
      public Builder clearTextureHash() {
        result.hasTextureHash = false;
        result.textureHash_ = getDefaultInstance().getTextureHash();
        return this;
      }
      
      // optional bool priority_speaker = 18;
      public boolean hasPrioritySpeaker() {
        return result.hasPrioritySpeaker();
      }
      public boolean getPrioritySpeaker() {
        return result.getPrioritySpeaker();
      }
      public Builder setPrioritySpeaker(boolean value) {
        result.hasPrioritySpeaker = true;
        result.prioritySpeaker_ = value;
        return this;
      }
      public Builder clearPrioritySpeaker() {
        result.hasPrioritySpeaker = false;
        result.prioritySpeaker_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.UserState)
    }
    
    static {
      defaultInstance = new UserState(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.UserState)
  }
  
  public static final class BanList extends
      com.google.protobuf.GeneratedMessageLite {
    // Use BanList.newBuilder() to construct.
    private BanList() {
      initFields();
    }
    private BanList(boolean noInit) {}
    
    private static final BanList defaultInstance;
    public static BanList getDefaultInstance() {
      return defaultInstance;
    }
    
    public BanList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class BanEntry extends
        com.google.protobuf.GeneratedMessageLite {
      // Use BanEntry.newBuilder() to construct.
      private BanEntry() {
        initFields();
      }
      private BanEntry(boolean noInit) {}
      
      private static final BanEntry defaultInstance;
      public static BanEntry getDefaultInstance() {
        return defaultInstance;
      }
      
      public BanEntry getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required bytes address = 1;
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private boolean hasAddress;
      private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasAddress() { return hasAddress; }
      public com.google.protobuf.ByteString getAddress() { return address_; }
      
      // required uint32 mask = 2;
      public static final int MASK_FIELD_NUMBER = 2;
      private boolean hasMask;
      private int mask_ = 0;
      public boolean hasMask() { return hasMask; }
      public int getMask() { return mask_; }
      
      // optional string name = 3;
      public static final int NAME_FIELD_NUMBER = 3;
      private boolean hasName;
      private String name_ = "";
      public boolean hasName() { return hasName; }
      public String getName() { return name_; }
      
      // optional string hash = 4;
      public static final int HASH_FIELD_NUMBER = 4;
      private boolean hasHash;
      private String hash_ = "";
      public boolean hasHash() { return hasHash; }
      public String getHash() { return hash_; }
      
      // optional string reason = 5;
      public static final int REASON_FIELD_NUMBER = 5;
      private boolean hasReason;
      private String reason_ = "";
      public boolean hasReason() { return hasReason; }
      public String getReason() { return reason_; }
      
      // optional string start = 6;
      public static final int START_FIELD_NUMBER = 6;
      private boolean hasStart;
      private String start_ = "";
      public boolean hasStart() { return hasStart; }
      public String getStart() { return start_; }
      
      // optional uint32 duration = 7;
      public static final int DURATION_FIELD_NUMBER = 7;
      private boolean hasDuration;
      private int duration_ = 0;
      public boolean hasDuration() { return hasDuration; }
      public int getDuration() { return duration_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasAddress) return false;
        if (!hasMask) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasAddress()) {
          output.writeBytes(1, getAddress());
        }
        if (hasMask()) {
          output.writeUInt32(2, getMask());
        }
        if (hasName()) {
          output.writeString(3, getName());
        }
        if (hasHash()) {
          output.writeString(4, getHash());
        }
        if (hasReason()) {
          output.writeString(5, getReason());
        }
        if (hasStart()) {
          output.writeString(6, getStart());
        }
        if (hasDuration()) {
          output.writeUInt32(7, getDuration());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasAddress()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getAddress());
        }
        if (hasMask()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getMask());
        }
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getName());
        }
        if (hasHash()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getHash());
        }
        if (hasReason()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getReason());
        }
        if (hasStart()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(6, getStart());
        }
        if (hasDuration()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, getDuration());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.BanList.BanEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.BanList.BanEntry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.BanList.BanEntry, Builder> {
        private com.sapta.htonline.MumbleProto.BanList.BanEntry result;
        
        // Construct using com.example.mumbleclient.MumbleProto.BanList.BanEntry.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.BanList.BanEntry();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.BanList.BanEntry internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.BanList.BanEntry();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.BanList.BanEntry getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.BanList.BanEntry.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.BanList.BanEntry build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.BanList.BanEntry buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.BanList.BanEntry buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.sapta.htonline.MumbleProto.BanList.BanEntry returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.BanList.BanEntry other) {
          if (other == com.sapta.htonline.MumbleProto.BanList.BanEntry.getDefaultInstance()) return this;
          if (other.hasAddress()) {
            setAddress(other.getAddress());
          }
          if (other.hasMask()) {
            setMask(other.getMask());
          }
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasHash()) {
            setHash(other.getHash());
          }
          if (other.hasReason()) {
            setReason(other.getReason());
          }
          if (other.hasStart()) {
            setStart(other.getStart());
          }
          if (other.hasDuration()) {
            setDuration(other.getDuration());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setAddress(input.readBytes());
                break;
              }
              case 16: {
                setMask(input.readUInt32());
                break;
              }
              case 26: {
                setName(input.readString());
                break;
              }
              case 34: {
                setHash(input.readString());
                break;
              }
              case 42: {
                setReason(input.readString());
                break;
              }
              case 50: {
                setStart(input.readString());
                break;
              }
              case 56: {
                setDuration(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // required bytes address = 1;
        public boolean hasAddress() {
          return result.hasAddress();
        }
        public com.google.protobuf.ByteString getAddress() {
          return result.getAddress();
        }
        public Builder setAddress(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasAddress = true;
          result.address_ = value;
          return this;
        }
        public Builder clearAddress() {
          result.hasAddress = false;
          result.address_ = getDefaultInstance().getAddress();
          return this;
        }
        
        // required uint32 mask = 2;
        public boolean hasMask() {
          return result.hasMask();
        }
        public int getMask() {
          return result.getMask();
        }
        public Builder setMask(int value) {
          result.hasMask = true;
          result.mask_ = value;
          return this;
        }
        public Builder clearMask() {
          result.hasMask = false;
          result.mask_ = 0;
          return this;
        }
        
        // optional string name = 3;
        public boolean hasName() {
          return result.hasName();
        }
        public String getName() {
          return result.getName();
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // optional string hash = 4;
        public boolean hasHash() {
          return result.hasHash();
        }
        public String getHash() {
          return result.getHash();
        }
        public Builder setHash(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasHash = true;
          result.hash_ = value;
          return this;
        }
        public Builder clearHash() {
          result.hasHash = false;
          result.hash_ = getDefaultInstance().getHash();
          return this;
        }
        
        // optional string reason = 5;
        public boolean hasReason() {
          return result.hasReason();
        }
        public String getReason() {
          return result.getReason();
        }
        public Builder setReason(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
          result.reason_ = value;
          return this;
        }
        public Builder clearReason() {
          result.hasReason = false;
          result.reason_ = getDefaultInstance().getReason();
          return this;
        }
        
        // optional string start = 6;
        public boolean hasStart() {
          return result.hasStart();
        }
        public String getStart() {
          return result.getStart();
        }
        public Builder setStart(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasStart = true;
          result.start_ = value;
          return this;
        }
        public Builder clearStart() {
          result.hasStart = false;
          result.start_ = getDefaultInstance().getStart();
          return this;
        }
        
        // optional uint32 duration = 7;
        public boolean hasDuration() {
          return result.hasDuration();
        }
        public int getDuration() {
          return result.getDuration();
        }
        public Builder setDuration(int value) {
          result.hasDuration = true;
          result.duration_ = value;
          return this;
        }
        public Builder clearDuration() {
          result.hasDuration = false;
          result.duration_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.BanList.BanEntry)
      }
      
      static {
        defaultInstance = new BanEntry(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.BanList.BanEntry)
    }
    
    // repeated .MumbleProto.BanList.BanEntry bans = 1;
    public static final int BANS_FIELD_NUMBER = 1;
    private java.util.List<com.sapta.htonline.MumbleProto.BanList.BanEntry> bans_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sapta.htonline.MumbleProto.BanList.BanEntry> getBansList() {
      return bans_;
    }
    public int getBansCount() { return bans_.size(); }
    public com.sapta.htonline.MumbleProto.BanList.BanEntry getBans(int index) {
      return bans_.get(index);
    }
    
    // optional bool query = 2 [default = false];
    public static final int QUERY_FIELD_NUMBER = 2;
    private boolean hasQuery;
    private boolean query_ = false;
    public boolean hasQuery() { return hasQuery; }
    public boolean getQuery() { return query_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.sapta.htonline.MumbleProto.BanList.BanEntry element : getBansList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.sapta.htonline.MumbleProto.BanList.BanEntry element : getBansList()) {
        output.writeMessage(1, element);
      }
      if (hasQuery()) {
        output.writeBool(2, getQuery());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.sapta.htonline.MumbleProto.BanList.BanEntry element : getBansList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasQuery()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getQuery());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.BanList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.BanList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.BanList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.BanList, Builder> {
      private com.sapta.htonline.MumbleProto.BanList result;
      
      // Construct using com.example.mumbleclient.MumbleProto.BanList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.BanList();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.BanList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.BanList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.BanList getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.BanList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.BanList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.BanList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.BanList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.bans_ != java.util.Collections.EMPTY_LIST) {
          result.bans_ =
            java.util.Collections.unmodifiableList(result.bans_);
        }
        com.sapta.htonline.MumbleProto.BanList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.BanList other) {
        if (other == com.sapta.htonline.MumbleProto.BanList.getDefaultInstance()) return this;
        if (!other.bans_.isEmpty()) {
          if (result.bans_.isEmpty()) {
            result.bans_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.BanList.BanEntry>();
          }
          result.bans_.addAll(other.bans_);
        }
        if (other.hasQuery()) {
          setQuery(other.getQuery());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              com.sapta.htonline.MumbleProto.BanList.BanEntry.Builder subBuilder = com.sapta.htonline.MumbleProto.BanList.BanEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBans(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setQuery(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // repeated .MumbleProto.BanList.BanEntry bans = 1;
      public java.util.List<com.sapta.htonline.MumbleProto.BanList.BanEntry> getBansList() {
        return java.util.Collections.unmodifiableList(result.bans_);
      }
      public int getBansCount() {
        return result.getBansCount();
      }
      public com.sapta.htonline.MumbleProto.BanList.BanEntry getBans(int index) {
        return result.getBans(index);
      }
      public Builder setBans(int index, com.sapta.htonline.MumbleProto.BanList.BanEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.bans_.set(index, value);
        return this;
      }
      public Builder setBans(int index, com.sapta.htonline.MumbleProto.BanList.BanEntry.Builder builderForValue) {
        result.bans_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBans(com.sapta.htonline.MumbleProto.BanList.BanEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.bans_.isEmpty()) {
          result.bans_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.BanList.BanEntry>();
        }
        result.bans_.add(value);
        return this;
      }
      public Builder addBans(com.sapta.htonline.MumbleProto.BanList.BanEntry.Builder builderForValue) {
        if (result.bans_.isEmpty()) {
          result.bans_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.BanList.BanEntry>();
        }
        result.bans_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBans(
          Iterable<? extends com.sapta.htonline.MumbleProto.BanList.BanEntry> values) {
        if (result.bans_.isEmpty()) {
          result.bans_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.BanList.BanEntry>();
        }
        super.addAll(values, result.bans_);
        return this;
      }
      public Builder clearBans() {
        result.bans_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool query = 2 [default = false];
      public boolean hasQuery() {
        return result.hasQuery();
      }
      public boolean getQuery() {
        return result.getQuery();
      }
      public Builder setQuery(boolean value) {
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder clearQuery() {
        result.hasQuery = false;
        result.query_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.BanList)
    }
    
    static {
      defaultInstance = new BanList(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.BanList)
  }
  
  public static final class TextMessage extends
      com.google.protobuf.GeneratedMessageLite {
    // Use TextMessage.newBuilder() to construct.
    private TextMessage() {
      initFields();
    }
    private TextMessage(boolean noInit) {}
    
    private static final TextMessage defaultInstance;
    public static TextMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public TextMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 actor = 1;
    public static final int ACTOR_FIELD_NUMBER = 1;
    private boolean hasActor;
    private int actor_ = 0;
    public boolean hasActor() { return hasActor; }
    public int getActor() { return actor_; }
    
    // repeated uint32 session = 2;
    public static final int SESSION_FIELD_NUMBER = 2;
    private java.util.List<Integer> session_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getSessionList() {
      return session_;
    }
    public int getSessionCount() { return session_.size(); }
    public int getSession(int index) {
      return session_.get(index);
    }
    
    // repeated uint32 channel_id = 3;
    public static final int CHANNEL_ID_FIELD_NUMBER = 3;
    private java.util.List<Integer> channelId_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getChannelIdList() {
      return channelId_;
    }
    public int getChannelIdCount() { return channelId_.size(); }
    public int getChannelId(int index) {
      return channelId_.get(index);
    }
    
    // repeated uint32 tree_id = 4;
    public static final int TREE_ID_FIELD_NUMBER = 4;
    private java.util.List<Integer> treeId_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getTreeIdList() {
      return treeId_;
    }
    public int getTreeIdCount() { return treeId_.size(); }
    public int getTreeId(int index) {
      return treeId_.get(index);
    }
    
    // required string message = 5;
    public static final int MESSAGE_FIELD_NUMBER = 5;
    private boolean hasMessage;
    private String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public String getMessage() { return message_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMessage) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasActor()) {
        output.writeUInt32(1, getActor());
      }
      for (int element : getSessionList()) {
        output.writeUInt32(2, element);
      }
      for (int element : getChannelIdList()) {
        output.writeUInt32(3, element);
      }
      for (int element : getTreeIdList()) {
        output.writeUInt32(4, element);
      }
      if (hasMessage()) {
        output.writeString(5, getMessage());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasActor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getActor());
      }
      {
        int dataSize = 0;
        for (int element : getSessionList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSessionList().size();
      }
      {
        int dataSize = 0;
        for (int element : getChannelIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getChannelIdList().size();
      }
      {
        int dataSize = 0;
        for (int element : getTreeIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTreeIdList().size();
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMessage());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.TextMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.TextMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.TextMessage, Builder> {
      private com.sapta.htonline.MumbleProto.TextMessage result;
      
      // Construct using com.example.mumbleclient.MumbleProto.TextMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.TextMessage();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.TextMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.TextMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.TextMessage getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.TextMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.TextMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.TextMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.TextMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.session_ != java.util.Collections.EMPTY_LIST) {
          result.session_ =
            java.util.Collections.unmodifiableList(result.session_);
        }
        if (result.channelId_ != java.util.Collections.EMPTY_LIST) {
          result.channelId_ =
            java.util.Collections.unmodifiableList(result.channelId_);
        }
        if (result.treeId_ != java.util.Collections.EMPTY_LIST) {
          result.treeId_ =
            java.util.Collections.unmodifiableList(result.treeId_);
        }
        com.sapta.htonline.MumbleProto.TextMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.TextMessage other) {
        if (other == com.sapta.htonline.MumbleProto.TextMessage.getDefaultInstance()) return this;
        if (other.hasActor()) {
          setActor(other.getActor());
        }
        if (!other.session_.isEmpty()) {
          if (result.session_.isEmpty()) {
            result.session_ = new java.util.ArrayList<Integer>();
          }
          result.session_.addAll(other.session_);
        }
        if (!other.channelId_.isEmpty()) {
          if (result.channelId_.isEmpty()) {
            result.channelId_ = new java.util.ArrayList<Integer>();
          }
          result.channelId_.addAll(other.channelId_);
        }
        if (!other.treeId_.isEmpty()) {
          if (result.treeId_.isEmpty()) {
            result.treeId_ = new java.util.ArrayList<Integer>();
          }
          result.treeId_.addAll(other.treeId_);
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setActor(input.readUInt32());
              break;
            }
            case 16: {
              addSession(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSession(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addChannelId(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addChannelId(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              addTreeId(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTreeId(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              setMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 actor = 1;
      public boolean hasActor() {
        return result.hasActor();
      }
      public int getActor() {
        return result.getActor();
      }
      public Builder setActor(int value) {
        result.hasActor = true;
        result.actor_ = value;
        return this;
      }
      public Builder clearActor() {
        result.hasActor = false;
        result.actor_ = 0;
        return this;
      }
      
      // repeated uint32 session = 2;
      public java.util.List<Integer> getSessionList() {
        return java.util.Collections.unmodifiableList(result.session_);
      }
      public int getSessionCount() {
        return result.getSessionCount();
      }
      public int getSession(int index) {
        return result.getSession(index);
      }
      public Builder setSession(int index, int value) {
        result.session_.set(index, value);
        return this;
      }
      public Builder addSession(int value) {
        if (result.session_.isEmpty()) {
          result.session_ = new java.util.ArrayList<Integer>();
        }
        result.session_.add(value);
        return this;
      }
      public Builder addAllSession(
          Iterable<? extends Integer> values) {
        if (result.session_.isEmpty()) {
          result.session_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.session_);
        return this;
      }
      public Builder clearSession() {
        result.session_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 channel_id = 3;
      public java.util.List<Integer> getChannelIdList() {
        return java.util.Collections.unmodifiableList(result.channelId_);
      }
      public int getChannelIdCount() {
        return result.getChannelIdCount();
      }
      public int getChannelId(int index) {
        return result.getChannelId(index);
      }
      public Builder setChannelId(int index, int value) {
        result.channelId_.set(index, value);
        return this;
      }
      public Builder addChannelId(int value) {
        if (result.channelId_.isEmpty()) {
          result.channelId_ = new java.util.ArrayList<Integer>();
        }
        result.channelId_.add(value);
        return this;
      }
      public Builder addAllChannelId(
          Iterable<? extends Integer> values) {
        if (result.channelId_.isEmpty()) {
          result.channelId_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.channelId_);
        return this;
      }
      public Builder clearChannelId() {
        result.channelId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 tree_id = 4;
      public java.util.List<Integer> getTreeIdList() {
        return java.util.Collections.unmodifiableList(result.treeId_);
      }
      public int getTreeIdCount() {
        return result.getTreeIdCount();
      }
      public int getTreeId(int index) {
        return result.getTreeId(index);
      }
      public Builder setTreeId(int index, int value) {
        result.treeId_.set(index, value);
        return this;
      }
      public Builder addTreeId(int value) {
        if (result.treeId_.isEmpty()) {
          result.treeId_ = new java.util.ArrayList<Integer>();
        }
        result.treeId_.add(value);
        return this;
      }
      public Builder addAllTreeId(
          Iterable<? extends Integer> values) {
        if (result.treeId_.isEmpty()) {
          result.treeId_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.treeId_);
        return this;
      }
      public Builder clearTreeId() {
        result.treeId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string message = 5;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.TextMessage)
    }
    
    static {
      defaultInstance = new TextMessage(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.TextMessage)
  }
  
  public static final class PermissionDenied extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PermissionDenied.newBuilder() to construct.
    private PermissionDenied() {
      initFields();
    }
    private PermissionDenied(boolean noInit) {}
    
    private static final PermissionDenied defaultInstance;
    public static PermissionDenied getDefaultInstance() {
      return defaultInstance;
    }
    
    public PermissionDenied getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum DenyType
        implements com.google.protobuf.Internal.EnumLite {
      Text(0, 0),
      Permission(1, 1),
      SuperUser(2, 2),
      ChannelName(3, 3),
      TextTooLong(4, 4),
      H9K(5, 5),
      TemporaryChannel(6, 6),
      MissingCertificate(7, 7),
      UserName(8, 8),
      ChannelFull(9, 9),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static DenyType valueOf(int value) {
        switch (value) {
          case 0: return Text;
          case 1: return Permission;
          case 2: return SuperUser;
          case 3: return ChannelName;
          case 4: return TextTooLong;
          case 5: return H9K;
          case 6: return TemporaryChannel;
          case 7: return MissingCertificate;
          case 8: return UserName;
          case 9: return ChannelFull;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<DenyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DenyType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DenyType>() {
              public DenyType findValueByNumber(int number) {
                return DenyType.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private DenyType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MumbleProto.PermissionDenied.DenyType)
    }
    
    // optional uint32 permission = 1;
    public static final int PERMISSION_FIELD_NUMBER = 1;
    private boolean hasPermission;
    private int permission_ = 0;
    public boolean hasPermission() { return hasPermission; }
    public int getPermission() { return permission_; }
    
    // optional uint32 channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // optional uint32 session = 3;
    public static final int SESSION_FIELD_NUMBER = 3;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional string reason = 4;
    public static final int REASON_FIELD_NUMBER = 4;
    private boolean hasReason;
    private String reason_ = "";
    public boolean hasReason() { return hasReason; }
    public String getReason() { return reason_; }
    
    // optional .MumbleProto.PermissionDenied.DenyType type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private boolean hasType;
    private com.sapta.htonline.MumbleProto.PermissionDenied.DenyType type_;
    public boolean hasType() { return hasType; }
    public com.sapta.htonline.MumbleProto.PermissionDenied.DenyType getType() { return type_; }
    
    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private String name_ = "";
    public boolean hasName() { return hasName; }
    public String getName() { return name_; }
    
    private void initFields() {
      type_ = com.sapta.htonline.MumbleProto.PermissionDenied.DenyType.Text;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPermission()) {
        output.writeUInt32(1, getPermission());
      }
      if (hasChannelId()) {
        output.writeUInt32(2, getChannelId());
      }
      if (hasSession()) {
        output.writeUInt32(3, getSession());
      }
      if (hasReason()) {
        output.writeString(4, getReason());
      }
      if (hasType()) {
        output.writeEnum(5, getType().getNumber());
      }
      if (hasName()) {
        output.writeString(6, getName());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPermission()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getPermission());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getChannelId());
      }
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getSession());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getReason());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, getType().getNumber());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getName());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionDenied parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.PermissionDenied prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.PermissionDenied, Builder> {
      private com.sapta.htonline.MumbleProto.PermissionDenied result;
      
      // Construct using com.example.mumbleclient.MumbleProto.PermissionDenied.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.PermissionDenied();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.PermissionDenied internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.PermissionDenied();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.PermissionDenied getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.PermissionDenied.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.PermissionDenied build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.PermissionDenied buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.PermissionDenied buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.PermissionDenied returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.PermissionDenied other) {
        if (other == com.sapta.htonline.MumbleProto.PermissionDenied.getDefaultInstance()) return this;
        if (other.hasPermission()) {
          setPermission(other.getPermission());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setPermission(input.readUInt32());
              break;
            }
            case 16: {
              setChannelId(input.readUInt32());
              break;
            }
            case 24: {
              setSession(input.readUInt32());
              break;
            }
            case 34: {
              setReason(input.readString());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.sapta.htonline.MumbleProto.PermissionDenied.DenyType value = com.sapta.htonline.MumbleProto.PermissionDenied.DenyType.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 50: {
              setName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 permission = 1;
      public boolean hasPermission() {
        return result.hasPermission();
      }
      public int getPermission() {
        return result.getPermission();
      }
      public Builder setPermission(int value) {
        result.hasPermission = true;
        result.permission_ = value;
        return this;
      }
      public Builder clearPermission() {
        result.hasPermission = false;
        result.permission_ = 0;
        return this;
      }
      
      // optional uint32 channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // optional uint32 session = 3;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional string reason = 4;
      public boolean hasReason() {
        return result.hasReason();
      }
      public String getReason() {
        return result.getReason();
      }
      public Builder setReason(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = getDefaultInstance().getReason();
        return this;
      }
      
      // optional .MumbleProto.PermissionDenied.DenyType type = 5;
      public boolean hasType() {
        return result.hasType();
      }
      public com.sapta.htonline.MumbleProto.PermissionDenied.DenyType getType() {
        return result.getType();
      }
      public Builder setType(com.sapta.htonline.MumbleProto.PermissionDenied.DenyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.sapta.htonline.MumbleProto.PermissionDenied.DenyType.Text;
        return this;
      }
      
      // optional string name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public String getName() {
        return result.getName();
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.PermissionDenied)
    }
    
    static {
      defaultInstance = new PermissionDenied(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.PermissionDenied)
  }
  
  public static final class ACL extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ACL.newBuilder() to construct.
    private ACL() {
      initFields();
    }
    private ACL(boolean noInit) {}
    
    private static final ACL defaultInstance;
    public static ACL getDefaultInstance() {
      return defaultInstance;
    }
    
    public ACL getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class ChanGroup extends
        com.google.protobuf.GeneratedMessageLite {
      // Use ChanGroup.newBuilder() to construct.
      private ChanGroup() {
        initFields();
      }
      private ChanGroup(boolean noInit) {}
      
      private static final ChanGroup defaultInstance;
      public static ChanGroup getDefaultInstance() {
        return defaultInstance;
      }
      
      public ChanGroup getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private String name_ = "";
      public boolean hasName() { return hasName; }
      public String getName() { return name_; }
      
      // optional bool inherited = 2 [default = true];
      public static final int INHERITED_FIELD_NUMBER = 2;
      private boolean hasInherited;
      private boolean inherited_ = true;
      public boolean hasInherited() { return hasInherited; }
      public boolean getInherited() { return inherited_; }
      
      // optional bool inherit = 3 [default = true];
      public static final int INHERIT_FIELD_NUMBER = 3;
      private boolean hasInherit;
      private boolean inherit_ = true;
      public boolean hasInherit() { return hasInherit; }
      public boolean getInherit() { return inherit_; }
      
      // optional bool inheritable = 4 [default = true];
      public static final int INHERITABLE_FIELD_NUMBER = 4;
      private boolean hasInheritable;
      private boolean inheritable_ = true;
      public boolean hasInheritable() { return hasInheritable; }
      public boolean getInheritable() { return inheritable_; }
      
      // repeated uint32 add = 5;
      public static final int ADD_FIELD_NUMBER = 5;
      private java.util.List<Integer> add_ =
        java.util.Collections.emptyList();
      public java.util.List<Integer> getAddList() {
        return add_;
      }
      public int getAddCount() { return add_.size(); }
      public int getAdd(int index) {
        return add_.get(index);
      }
      
      // repeated uint32 remove = 6;
      public static final int REMOVE_FIELD_NUMBER = 6;
      private java.util.List<Integer> remove_ =
        java.util.Collections.emptyList();
      public java.util.List<Integer> getRemoveList() {
        return remove_;
      }
      public int getRemoveCount() { return remove_.size(); }
      public int getRemove(int index) {
        return remove_.get(index);
      }
      
      // repeated uint32 inherited_members = 7;
      public static final int INHERITED_MEMBERS_FIELD_NUMBER = 7;
      private java.util.List<Integer> inheritedMembers_ =
        java.util.Collections.emptyList();
      public java.util.List<Integer> getInheritedMembersList() {
        return inheritedMembers_;
      }
      public int getInheritedMembersCount() { return inheritedMembers_.size(); }
      public int getInheritedMembers(int index) {
        return inheritedMembers_.get(index);
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasName) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasInherited()) {
          output.writeBool(2, getInherited());
        }
        if (hasInherit()) {
          output.writeBool(3, getInherit());
        }
        if (hasInheritable()) {
          output.writeBool(4, getInheritable());
        }
        for (int element : getAddList()) {
          output.writeUInt32(5, element);
        }
        for (int element : getRemoveList()) {
          output.writeUInt32(6, element);
        }
        for (int element : getInheritedMembersList()) {
          output.writeUInt32(7, element);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasInherited()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, getInherited());
        }
        if (hasInherit()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, getInherit());
        }
        if (hasInheritable()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, getInheritable());
        }
        {
          int dataSize = 0;
          for (int element : getAddList()) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * getAddList().size();
        }
        {
          int dataSize = 0;
          for (int element : getRemoveList()) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * getRemoveList().size();
        }
        {
          int dataSize = 0;
          for (int element : getInheritedMembersList()) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * getInheritedMembersList().size();
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.ACL.ChanGroup prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.ACL.ChanGroup, Builder> {
        private com.sapta.htonline.MumbleProto.ACL.ChanGroup result;
        
        // Construct using com.example.mumbleclient.MumbleProto.ACL.ChanGroup.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.ACL.ChanGroup();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.ACL.ChanGroup internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.ACL.ChanGroup();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.ACL.ChanGroup getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.ACL.ChanGroup.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.ACL.ChanGroup build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.ACL.ChanGroup buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.ACL.ChanGroup buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.add_ != java.util.Collections.EMPTY_LIST) {
            result.add_ =
              java.util.Collections.unmodifiableList(result.add_);
          }
          if (result.remove_ != java.util.Collections.EMPTY_LIST) {
            result.remove_ =
              java.util.Collections.unmodifiableList(result.remove_);
          }
          if (result.inheritedMembers_ != java.util.Collections.EMPTY_LIST) {
            result.inheritedMembers_ =
              java.util.Collections.unmodifiableList(result.inheritedMembers_);
          }
          com.sapta.htonline.MumbleProto.ACL.ChanGroup returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.ACL.ChanGroup other) {
          if (other == com.sapta.htonline.MumbleProto.ACL.ChanGroup.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasInherited()) {
            setInherited(other.getInherited());
          }
          if (other.hasInherit()) {
            setInherit(other.getInherit());
          }
          if (other.hasInheritable()) {
            setInheritable(other.getInheritable());
          }
          if (!other.add_.isEmpty()) {
            if (result.add_.isEmpty()) {
              result.add_ = new java.util.ArrayList<Integer>();
            }
            result.add_.addAll(other.add_);
          }
          if (!other.remove_.isEmpty()) {
            if (result.remove_.isEmpty()) {
              result.remove_ = new java.util.ArrayList<Integer>();
            }
            result.remove_.addAll(other.remove_);
          }
          if (!other.inheritedMembers_.isEmpty()) {
            if (result.inheritedMembers_.isEmpty()) {
              result.inheritedMembers_ = new java.util.ArrayList<Integer>();
            }
            result.inheritedMembers_.addAll(other.inheritedMembers_);
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 16: {
                setInherited(input.readBool());
                break;
              }
              case 24: {
                setInherit(input.readBool());
                break;
              }
              case 32: {
                setInheritable(input.readBool());
                break;
              }
              case 40: {
                addAdd(input.readUInt32());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addAdd(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                addRemove(input.readUInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addRemove(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 56: {
                addInheritedMembers(input.readUInt32());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addInheritedMembers(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        }
        
        
        // required string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public String getName() {
          return result.getName();
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // optional bool inherited = 2 [default = true];
        public boolean hasInherited() {
          return result.hasInherited();
        }
        public boolean getInherited() {
          return result.getInherited();
        }
        public Builder setInherited(boolean value) {
          result.hasInherited = true;
          result.inherited_ = value;
          return this;
        }
        public Builder clearInherited() {
          result.hasInherited = false;
          result.inherited_ = true;
          return this;
        }
        
        // optional bool inherit = 3 [default = true];
        public boolean hasInherit() {
          return result.hasInherit();
        }
        public boolean getInherit() {
          return result.getInherit();
        }
        public Builder setInherit(boolean value) {
          result.hasInherit = true;
          result.inherit_ = value;
          return this;
        }
        public Builder clearInherit() {
          result.hasInherit = false;
          result.inherit_ = true;
          return this;
        }
        
        // optional bool inheritable = 4 [default = true];
        public boolean hasInheritable() {
          return result.hasInheritable();
        }
        public boolean getInheritable() {
          return result.getInheritable();
        }
        public Builder setInheritable(boolean value) {
          result.hasInheritable = true;
          result.inheritable_ = value;
          return this;
        }
        public Builder clearInheritable() {
          result.hasInheritable = false;
          result.inheritable_ = true;
          return this;
        }
        
        // repeated uint32 add = 5;
        public java.util.List<Integer> getAddList() {
          return java.util.Collections.unmodifiableList(result.add_);
        }
        public int getAddCount() {
          return result.getAddCount();
        }
        public int getAdd(int index) {
          return result.getAdd(index);
        }
        public Builder setAdd(int index, int value) {
          result.add_.set(index, value);
          return this;
        }
        public Builder addAdd(int value) {
          if (result.add_.isEmpty()) {
            result.add_ = new java.util.ArrayList<Integer>();
          }
          result.add_.add(value);
          return this;
        }
        public Builder addAllAdd(
            Iterable<? extends Integer> values) {
          if (result.add_.isEmpty()) {
            result.add_ = new java.util.ArrayList<Integer>();
          }
          super.addAll(values, result.add_);
          return this;
        }
        public Builder clearAdd() {
          result.add_ = java.util.Collections.emptyList();
          return this;
        }
        
        // repeated uint32 remove = 6;
        public java.util.List<Integer> getRemoveList() {
          return java.util.Collections.unmodifiableList(result.remove_);
        }
        public int getRemoveCount() {
          return result.getRemoveCount();
        }
        public int getRemove(int index) {
          return result.getRemove(index);
        }
        public Builder setRemove(int index, int value) {
          result.remove_.set(index, value);
          return this;
        }
        public Builder addRemove(int value) {
          if (result.remove_.isEmpty()) {
            result.remove_ = new java.util.ArrayList<Integer>();
          }
          result.remove_.add(value);
          return this;
        }
        public Builder addAllRemove(
            Iterable<? extends Integer> values) {
          if (result.remove_.isEmpty()) {
            result.remove_ = new java.util.ArrayList<Integer>();
          }
          super.addAll(values, result.remove_);
          return this;
        }
        public Builder clearRemove() {
          result.remove_ = java.util.Collections.emptyList();
          return this;
        }
        
        // repeated uint32 inherited_members = 7;
        public java.util.List<Integer> getInheritedMembersList() {
          return java.util.Collections.unmodifiableList(result.inheritedMembers_);
        }
        public int getInheritedMembersCount() {
          return result.getInheritedMembersCount();
        }
        public int getInheritedMembers(int index) {
          return result.getInheritedMembers(index);
        }
        public Builder setInheritedMembers(int index, int value) {
          result.inheritedMembers_.set(index, value);
          return this;
        }
        public Builder addInheritedMembers(int value) {
          if (result.inheritedMembers_.isEmpty()) {
            result.inheritedMembers_ = new java.util.ArrayList<Integer>();
          }
          result.inheritedMembers_.add(value);
          return this;
        }
        public Builder addAllInheritedMembers(
            Iterable<? extends Integer> values) {
          if (result.inheritedMembers_.isEmpty()) {
            result.inheritedMembers_ = new java.util.ArrayList<Integer>();
          }
          super.addAll(values, result.inheritedMembers_);
          return this;
        }
        public Builder clearInheritedMembers() {
          result.inheritedMembers_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.ACL.ChanGroup)
      }
      
      static {
        defaultInstance = new ChanGroup(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanGroup)
    }
    
    public static final class ChanACL extends
        com.google.protobuf.GeneratedMessageLite {
      // Use ChanACL.newBuilder() to construct.
      private ChanACL() {
        initFields();
      }
      private ChanACL(boolean noInit) {}
      
      private static final ChanACL defaultInstance;
      public static ChanACL getDefaultInstance() {
        return defaultInstance;
      }
      
      public ChanACL getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // optional bool apply_here = 1 [default = true];
      public static final int APPLY_HERE_FIELD_NUMBER = 1;
      private boolean hasApplyHere;
      private boolean applyHere_ = true;
      public boolean hasApplyHere() { return hasApplyHere; }
      public boolean getApplyHere() { return applyHere_; }
      
      // optional bool apply_subs = 2 [default = true];
      public static final int APPLY_SUBS_FIELD_NUMBER = 2;
      private boolean hasApplySubs;
      private boolean applySubs_ = true;
      public boolean hasApplySubs() { return hasApplySubs; }
      public boolean getApplySubs() { return applySubs_; }
      
      // optional bool inherited = 3 [default = true];
      public static final int INHERITED_FIELD_NUMBER = 3;
      private boolean hasInherited;
      private boolean inherited_ = true;
      public boolean hasInherited() { return hasInherited; }
      public boolean getInherited() { return inherited_; }
      
      // optional uint32 user_id = 4;
      public static final int USER_ID_FIELD_NUMBER = 4;
      private boolean hasUserId;
      private int userId_ = 0;
      public boolean hasUserId() { return hasUserId; }
      public int getUserId() { return userId_; }
      
      // optional string group = 5;
      public static final int GROUP_FIELD_NUMBER = 5;
      private boolean hasGroup;
      private String group_ = "";
      public boolean hasGroup() { return hasGroup; }
      public String getGroup() { return group_; }
      
      // optional uint32 grant = 6;
      public static final int GRANT_FIELD_NUMBER = 6;
      private boolean hasGrant;
      private int grant_ = 0;
      public boolean hasGrant() { return hasGrant; }
      public int getGrant() { return grant_; }
      
      // optional uint32 deny = 7;
      public static final int DENY_FIELD_NUMBER = 7;
      private boolean hasDeny;
      private int deny_ = 0;
      public boolean hasDeny() { return hasDeny; }
      public int getDeny() { return deny_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasApplyHere()) {
          output.writeBool(1, getApplyHere());
        }
        if (hasApplySubs()) {
          output.writeBool(2, getApplySubs());
        }
        if (hasInherited()) {
          output.writeBool(3, getInherited());
        }
        if (hasUserId()) {
          output.writeUInt32(4, getUserId());
        }
        if (hasGroup()) {
          output.writeString(5, getGroup());
        }
        if (hasGrant()) {
          output.writeUInt32(6, getGrant());
        }
        if (hasDeny()) {
          output.writeUInt32(7, getDeny());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasApplyHere()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, getApplyHere());
        }
        if (hasApplySubs()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, getApplySubs());
        }
        if (hasInherited()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, getInherited());
        }
        if (hasUserId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, getUserId());
        }
        if (hasGroup()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getGroup());
        }
        if (hasGrant()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, getGrant());
        }
        if (hasDeny()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, getDeny());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.ACL.ChanACL parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.ACL.ChanACL prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.ACL.ChanACL, Builder> {
        private com.sapta.htonline.MumbleProto.ACL.ChanACL result;
        
        // Construct using com.example.mumbleclient.MumbleProto.ACL.ChanACL.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.ACL.ChanACL();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.ACL.ChanACL internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.ACL.ChanACL();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.ACL.ChanACL getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.ACL.ChanACL.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.ACL.ChanACL build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.ACL.ChanACL buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.ACL.ChanACL buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.sapta.htonline.MumbleProto.ACL.ChanACL returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.ACL.ChanACL other) {
          if (other == com.sapta.htonline.MumbleProto.ACL.ChanACL.getDefaultInstance()) return this;
          if (other.hasApplyHere()) {
            setApplyHere(other.getApplyHere());
          }
          if (other.hasApplySubs()) {
            setApplySubs(other.getApplySubs());
          }
          if (other.hasInherited()) {
            setInherited(other.getInherited());
          }
          if (other.hasUserId()) {
            setUserId(other.getUserId());
          }
          if (other.hasGroup()) {
            setGroup(other.getGroup());
          }
          if (other.hasGrant()) {
            setGrant(other.getGrant());
          }
          if (other.hasDeny()) {
            setDeny(other.getDeny());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                setApplyHere(input.readBool());
                break;
              }
              case 16: {
                setApplySubs(input.readBool());
                break;
              }
              case 24: {
                setInherited(input.readBool());
                break;
              }
              case 32: {
                setUserId(input.readUInt32());
                break;
              }
              case 42: {
                setGroup(input.readString());
                break;
              }
              case 48: {
                setGrant(input.readUInt32());
                break;
              }
              case 56: {
                setDeny(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // optional bool apply_here = 1 [default = true];
        public boolean hasApplyHere() {
          return result.hasApplyHere();
        }
        public boolean getApplyHere() {
          return result.getApplyHere();
        }
        public Builder setApplyHere(boolean value) {
          result.hasApplyHere = true;
          result.applyHere_ = value;
          return this;
        }
        public Builder clearApplyHere() {
          result.hasApplyHere = false;
          result.applyHere_ = true;
          return this;
        }
        
        // optional bool apply_subs = 2 [default = true];
        public boolean hasApplySubs() {
          return result.hasApplySubs();
        }
        public boolean getApplySubs() {
          return result.getApplySubs();
        }
        public Builder setApplySubs(boolean value) {
          result.hasApplySubs = true;
          result.applySubs_ = value;
          return this;
        }
        public Builder clearApplySubs() {
          result.hasApplySubs = false;
          result.applySubs_ = true;
          return this;
        }
        
        // optional bool inherited = 3 [default = true];
        public boolean hasInherited() {
          return result.hasInherited();
        }
        public boolean getInherited() {
          return result.getInherited();
        }
        public Builder setInherited(boolean value) {
          result.hasInherited = true;
          result.inherited_ = value;
          return this;
        }
        public Builder clearInherited() {
          result.hasInherited = false;
          result.inherited_ = true;
          return this;
        }
        
        // optional uint32 user_id = 4;
        public boolean hasUserId() {
          return result.hasUserId();
        }
        public int getUserId() {
          return result.getUserId();
        }
        public Builder setUserId(int value) {
          result.hasUserId = true;
          result.userId_ = value;
          return this;
        }
        public Builder clearUserId() {
          result.hasUserId = false;
          result.userId_ = 0;
          return this;
        }
        
        // optional string group = 5;
        public boolean hasGroup() {
          return result.hasGroup();
        }
        public String getGroup() {
          return result.getGroup();
        }
        public Builder setGroup(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGroup = true;
          result.group_ = value;
          return this;
        }
        public Builder clearGroup() {
          result.hasGroup = false;
          result.group_ = getDefaultInstance().getGroup();
          return this;
        }
        
        // optional uint32 grant = 6;
        public boolean hasGrant() {
          return result.hasGrant();
        }
        public int getGrant() {
          return result.getGrant();
        }
        public Builder setGrant(int value) {
          result.hasGrant = true;
          result.grant_ = value;
          return this;
        }
        public Builder clearGrant() {
          result.hasGrant = false;
          result.grant_ = 0;
          return this;
        }
        
        // optional uint32 deny = 7;
        public boolean hasDeny() {
          return result.hasDeny();
        }
        public int getDeny() {
          return result.getDeny();
        }
        public Builder setDeny(int value) {
          result.hasDeny = true;
          result.deny_ = value;
          return this;
        }
        public Builder clearDeny() {
          result.hasDeny = false;
          result.deny_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.ACL.ChanACL)
      }
      
      static {
        defaultInstance = new ChanACL(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanACL)
    }
    
    // required uint32 channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // optional bool inherit_acls = 2 [default = true];
    public static final int INHERIT_ACLS_FIELD_NUMBER = 2;
    private boolean hasInheritAcls;
    private boolean inheritAcls_ = true;
    public boolean hasInheritAcls() { return hasInheritAcls; }
    public boolean getInheritAcls() { return inheritAcls_; }
    
    // repeated .MumbleProto.ACL.ChanGroup groups = 3;
    public static final int GROUPS_FIELD_NUMBER = 3;
    private java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanGroup> groups_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanGroup> getGroupsList() {
      return groups_;
    }
    public int getGroupsCount() { return groups_.size(); }
    public com.sapta.htonline.MumbleProto.ACL.ChanGroup getGroups(int index) {
      return groups_.get(index);
    }
    
    // repeated .MumbleProto.ACL.ChanACL acls = 4;
    public static final int ACLS_FIELD_NUMBER = 4;
    private java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanACL> acls_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanACL> getAclsList() {
      return acls_;
    }
    public int getAclsCount() { return acls_.size(); }
    public com.sapta.htonline.MumbleProto.ACL.ChanACL getAcls(int index) {
      return acls_.get(index);
    }
    
    // optional bool query = 5 [default = false];
    public static final int QUERY_FIELD_NUMBER = 5;
    private boolean hasQuery;
    private boolean query_ = false;
    public boolean hasQuery() { return hasQuery; }
    public boolean getQuery() { return query_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      for (com.sapta.htonline.MumbleProto.ACL.ChanGroup element : getGroupsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeUInt32(1, getChannelId());
      }
      if (hasInheritAcls()) {
        output.writeBool(2, getInheritAcls());
      }
      for (com.sapta.htonline.MumbleProto.ACL.ChanGroup element : getGroupsList()) {
        output.writeMessage(3, element);
      }
      for (com.sapta.htonline.MumbleProto.ACL.ChanACL element : getAclsList()) {
        output.writeMessage(4, element);
      }
      if (hasQuery()) {
        output.writeBool(5, getQuery());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getChannelId());
      }
      if (hasInheritAcls()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getInheritAcls());
      }
      for (com.sapta.htonline.MumbleProto.ACL.ChanGroup element : getGroupsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.sapta.htonline.MumbleProto.ACL.ChanACL element : getAclsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasQuery()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getQuery());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ACL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ACL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ACL prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ACL, Builder> {
      private com.sapta.htonline.MumbleProto.ACL result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ACL.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ACL();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ACL internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ACL();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ACL getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ACL.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ACL build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ACL buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ACL buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.groups_ != java.util.Collections.EMPTY_LIST) {
          result.groups_ =
            java.util.Collections.unmodifiableList(result.groups_);
        }
        if (result.acls_ != java.util.Collections.EMPTY_LIST) {
          result.acls_ =
            java.util.Collections.unmodifiableList(result.acls_);
        }
        com.sapta.htonline.MumbleProto.ACL returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ACL other) {
        if (other == com.sapta.htonline.MumbleProto.ACL.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasInheritAcls()) {
          setInheritAcls(other.getInheritAcls());
        }
        if (!other.groups_.isEmpty()) {
          if (result.groups_.isEmpty()) {
            result.groups_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanGroup>();
          }
          result.groups_.addAll(other.groups_);
        }
        if (!other.acls_.isEmpty()) {
          if (result.acls_.isEmpty()) {
            result.acls_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanACL>();
          }
          result.acls_.addAll(other.acls_);
        }
        if (other.hasQuery()) {
          setQuery(other.getQuery());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setChannelId(input.readUInt32());
              break;
            }
            case 16: {
              setInheritAcls(input.readBool());
              break;
            }
            case 26: {
              com.sapta.htonline.MumbleProto.ACL.ChanGroup.Builder subBuilder = com.sapta.htonline.MumbleProto.ACL.ChanGroup.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGroups(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.sapta.htonline.MumbleProto.ACL.ChanACL.Builder subBuilder = com.sapta.htonline.MumbleProto.ACL.ChanACL.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAcls(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setQuery(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required uint32 channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // optional bool inherit_acls = 2 [default = true];
      public boolean hasInheritAcls() {
        return result.hasInheritAcls();
      }
      public boolean getInheritAcls() {
        return result.getInheritAcls();
      }
      public Builder setInheritAcls(boolean value) {
        result.hasInheritAcls = true;
        result.inheritAcls_ = value;
        return this;
      }
      public Builder clearInheritAcls() {
        result.hasInheritAcls = false;
        result.inheritAcls_ = true;
        return this;
      }
      
      // repeated .MumbleProto.ACL.ChanGroup groups = 3;
      public java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanGroup> getGroupsList() {
        return java.util.Collections.unmodifiableList(result.groups_);
      }
      public int getGroupsCount() {
        return result.getGroupsCount();
      }
      public com.sapta.htonline.MumbleProto.ACL.ChanGroup getGroups(int index) {
        return result.getGroups(index);
      }
      public Builder setGroups(int index, com.sapta.htonline.MumbleProto.ACL.ChanGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.groups_.set(index, value);
        return this;
      }
      public Builder setGroups(int index, com.sapta.htonline.MumbleProto.ACL.ChanGroup.Builder builderForValue) {
        result.groups_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGroups(com.sapta.htonline.MumbleProto.ACL.ChanGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.groups_.isEmpty()) {
          result.groups_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanGroup>();
        }
        result.groups_.add(value);
        return this;
      }
      public Builder addGroups(com.sapta.htonline.MumbleProto.ACL.ChanGroup.Builder builderForValue) {
        if (result.groups_.isEmpty()) {
          result.groups_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanGroup>();
        }
        result.groups_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGroups(
          Iterable<? extends com.sapta.htonline.MumbleProto.ACL.ChanGroup> values) {
        if (result.groups_.isEmpty()) {
          result.groups_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanGroup>();
        }
        super.addAll(values, result.groups_);
        return this;
      }
      public Builder clearGroups() {
        result.groups_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .MumbleProto.ACL.ChanACL acls = 4;
      public java.util.List<com.sapta.htonline.MumbleProto.ACL.ChanACL> getAclsList() {
        return java.util.Collections.unmodifiableList(result.acls_);
      }
      public int getAclsCount() {
        return result.getAclsCount();
      }
      public com.sapta.htonline.MumbleProto.ACL.ChanACL getAcls(int index) {
        return result.getAcls(index);
      }
      public Builder setAcls(int index, com.sapta.htonline.MumbleProto.ACL.ChanACL value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.acls_.set(index, value);
        return this;
      }
      public Builder setAcls(int index, com.sapta.htonline.MumbleProto.ACL.ChanACL.Builder builderForValue) {
        result.acls_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAcls(com.sapta.htonline.MumbleProto.ACL.ChanACL value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.acls_.isEmpty()) {
          result.acls_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanACL>();
        }
        result.acls_.add(value);
        return this;
      }
      public Builder addAcls(com.sapta.htonline.MumbleProto.ACL.ChanACL.Builder builderForValue) {
        if (result.acls_.isEmpty()) {
          result.acls_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanACL>();
        }
        result.acls_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAcls(
          Iterable<? extends com.sapta.htonline.MumbleProto.ACL.ChanACL> values) {
        if (result.acls_.isEmpty()) {
          result.acls_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.ACL.ChanACL>();
        }
        super.addAll(values, result.acls_);
        return this;
      }
      public Builder clearAcls() {
        result.acls_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool query = 5 [default = false];
      public boolean hasQuery() {
        return result.hasQuery();
      }
      public boolean getQuery() {
        return result.getQuery();
      }
      public Builder setQuery(boolean value) {
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder clearQuery() {
        result.hasQuery = false;
        result.query_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ACL)
    }
    
    static {
      defaultInstance = new ACL(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ACL)
  }
  
  public static final class QueryUsers extends
      com.google.protobuf.GeneratedMessageLite {
    // Use QueryUsers.newBuilder() to construct.
    private QueryUsers() {
      initFields();
    }
    private QueryUsers(boolean noInit) {}
    
    private static final QueryUsers defaultInstance;
    public static QueryUsers getDefaultInstance() {
      return defaultInstance;
    }
    
    public QueryUsers getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated uint32 ids = 1;
    public static final int IDS_FIELD_NUMBER = 1;
    private java.util.List<Integer> ids_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getIdsList() {
      return ids_;
    }
    public int getIdsCount() { return ids_.size(); }
    public int getIds(int index) {
      return ids_.get(index);
    }
    
    // repeated string names = 2;
    public static final int NAMES_FIELD_NUMBER = 2;
    private java.util.List<String> names_ =
      java.util.Collections.emptyList();
    public java.util.List<String> getNamesList() {
      return names_;
    }
    public int getNamesCount() { return names_.size(); }
    public String getNames(int index) {
      return names_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getIdsList()) {
        output.writeUInt32(1, element);
      }
      for (String element : getNamesList()) {
        output.writeString(2, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      {
        int dataSize = 0;
        for (String element : getNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNamesList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.QueryUsers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.QueryUsers prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.QueryUsers, Builder> {
      private com.sapta.htonline.MumbleProto.QueryUsers result;
      
      // Construct using com.example.mumbleclient.MumbleProto.QueryUsers.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.QueryUsers();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.QueryUsers internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.QueryUsers();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.QueryUsers getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.QueryUsers.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.QueryUsers build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.QueryUsers buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.QueryUsers buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.ids_ != java.util.Collections.EMPTY_LIST) {
          result.ids_ =
            java.util.Collections.unmodifiableList(result.ids_);
        }
        if (result.names_ != java.util.Collections.EMPTY_LIST) {
          result.names_ =
            java.util.Collections.unmodifiableList(result.names_);
        }
        com.sapta.htonline.MumbleProto.QueryUsers returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.QueryUsers other) {
        if (other == com.sapta.htonline.MumbleProto.QueryUsers.getDefaultInstance()) return this;
        if (!other.ids_.isEmpty()) {
          if (result.ids_.isEmpty()) {
            result.ids_ = new java.util.ArrayList<Integer>();
          }
          result.ids_.addAll(other.ids_);
        }
        if (!other.names_.isEmpty()) {
          if (result.names_.isEmpty()) {
            result.names_ = new java.util.ArrayList<String>();
          }
          result.names_.addAll(other.names_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              addIds(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              addNames(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated uint32 ids = 1;
      public java.util.List<Integer> getIdsList() {
        return java.util.Collections.unmodifiableList(result.ids_);
      }
      public int getIdsCount() {
        return result.getIdsCount();
      }
      public int getIds(int index) {
        return result.getIds(index);
      }
      public Builder setIds(int index, int value) {
        result.ids_.set(index, value);
        return this;
      }
      public Builder addIds(int value) {
        if (result.ids_.isEmpty()) {
          result.ids_ = new java.util.ArrayList<Integer>();
        }
        result.ids_.add(value);
        return this;
      }
      public Builder addAllIds(
          Iterable<? extends Integer> values) {
        if (result.ids_.isEmpty()) {
          result.ids_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.ids_);
        return this;
      }
      public Builder clearIds() {
        result.ids_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string names = 2;
      public java.util.List<String> getNamesList() {
        return java.util.Collections.unmodifiableList(result.names_);
      }
      public int getNamesCount() {
        return result.getNamesCount();
      }
      public String getNames(int index) {
        return result.getNames(index);
      }
      public Builder setNames(int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.names_.set(index, value);
        return this;
      }
      public Builder addNames(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.names_.isEmpty()) {
          result.names_ = new java.util.ArrayList<String>();
        }
        result.names_.add(value);
        return this;
      }
      public Builder addAllNames(
          Iterable<? extends String> values) {
        if (result.names_.isEmpty()) {
          result.names_ = new java.util.ArrayList<String>();
        }
        super.addAll(values, result.names_);
        return this;
      }
      public Builder clearNames() {
        result.names_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.QueryUsers)
    }
    
    static {
      defaultInstance = new QueryUsers(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.QueryUsers)
  }
  
  public static final class CryptSetup extends
      com.google.protobuf.GeneratedMessageLite {
    // Use CryptSetup.newBuilder() to construct.
    private CryptSetup() {
      initFields();
    }
    private CryptSetup(boolean noInit) {}
    
    private static final CryptSetup defaultInstance;
    public static CryptSetup getDefaultInstance() {
      return defaultInstance;
    }
    
    public CryptSetup getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional bytes key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional bytes client_nonce = 2;
    public static final int CLIENT_NONCE_FIELD_NUMBER = 2;
    private boolean hasClientNonce;
    private com.google.protobuf.ByteString clientNonce_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasClientNonce() { return hasClientNonce; }
    public com.google.protobuf.ByteString getClientNonce() { return clientNonce_; }
    
    // optional bytes server_nonce = 3;
    public static final int SERVER_NONCE_FIELD_NUMBER = 3;
    private boolean hasServerNonce;
    private com.google.protobuf.ByteString serverNonce_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasServerNonce() { return hasServerNonce; }
    public com.google.protobuf.ByteString getServerNonce() { return serverNonce_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasKey()) {
        output.writeBytes(1, getKey());
      }
      if (hasClientNonce()) {
        output.writeBytes(2, getClientNonce());
      }
      if (hasServerNonce()) {
        output.writeBytes(3, getServerNonce());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKey());
      }
      if (hasClientNonce()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getClientNonce());
      }
      if (hasServerNonce()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getServerNonce());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CryptSetup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.CryptSetup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.CryptSetup, Builder> {
      private com.sapta.htonline.MumbleProto.CryptSetup result;
      
      // Construct using com.example.mumbleclient.MumbleProto.CryptSetup.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.CryptSetup();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.CryptSetup internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.CryptSetup();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.CryptSetup getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.CryptSetup.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.CryptSetup build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.CryptSetup buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.CryptSetup buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.CryptSetup returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.CryptSetup other) {
        if (other == com.sapta.htonline.MumbleProto.CryptSetup.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasClientNonce()) {
          setClientNonce(other.getClientNonce());
        }
        if (other.hasServerNonce()) {
          setServerNonce(other.getServerNonce());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setKey(input.readBytes());
              break;
            }
            case 18: {
              setClientNonce(input.readBytes());
              break;
            }
            case 26: {
              setServerNonce(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional bytes key = 1;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional bytes client_nonce = 2;
      public boolean hasClientNonce() {
        return result.hasClientNonce();
      }
      public com.google.protobuf.ByteString getClientNonce() {
        return result.getClientNonce();
      }
      public Builder setClientNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientNonce = true;
        result.clientNonce_ = value;
        return this;
      }
      public Builder clearClientNonce() {
        result.hasClientNonce = false;
        result.clientNonce_ = getDefaultInstance().getClientNonce();
        return this;
      }
      
      // optional bytes server_nonce = 3;
      public boolean hasServerNonce() {
        return result.hasServerNonce();
      }
      public com.google.protobuf.ByteString getServerNonce() {
        return result.getServerNonce();
      }
      public Builder setServerNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServerNonce = true;
        result.serverNonce_ = value;
        return this;
      }
      public Builder clearServerNonce() {
        result.hasServerNonce = false;
        result.serverNonce_ = getDefaultInstance().getServerNonce();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.CryptSetup)
    }
    
    static {
      defaultInstance = new CryptSetup(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.CryptSetup)
  }
  
  public static final class ContextActionAdd extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ContextActionAdd.newBuilder() to construct.
    private ContextActionAdd() {
      initFields();
    }
    private ContextActionAdd(boolean noInit) {}
    
    private static final ContextActionAdd defaultInstance;
    public static ContextActionAdd getDefaultInstance() {
      return defaultInstance;
    }
    
    public ContextActionAdd getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Context
        implements com.google.protobuf.Internal.EnumLite {
      Server(0, 1),
      Channel(1, 2),
      User(2, 4),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Context valueOf(int value) {
        switch (value) {
          case 1: return Server;
          case 2: return Channel;
          case 4: return User;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Context>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Context>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Context>() {
              public Context findValueByNumber(int number) {
                return Context.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Context(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MumbleProto.ContextActionAdd.Context)
    }
    
    // required string action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private boolean hasAction;
    private String action_ = "";
    public boolean hasAction() { return hasAction; }
    public String getAction() { return action_; }
    
    // required string text = 2;
    public static final int TEXT_FIELD_NUMBER = 2;
    private boolean hasText;
    private String text_ = "";
    public boolean hasText() { return hasText; }
    public String getText() { return text_; }
    
    // optional uint32 context = 3;
    public static final int CONTEXT_FIELD_NUMBER = 3;
    private boolean hasContext;
    private int context_ = 0;
    public boolean hasContext() { return hasContext; }
    public int getContext() { return context_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAction) return false;
      if (!hasText) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAction()) {
        output.writeString(1, getAction());
      }
      if (hasText()) {
        output.writeString(2, getText());
      }
      if (hasContext()) {
        output.writeUInt32(3, getContext());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAction());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getText());
      }
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getContext());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextActionAdd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ContextActionAdd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ContextActionAdd, Builder> {
      private com.sapta.htonline.MumbleProto.ContextActionAdd result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ContextActionAdd.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ContextActionAdd();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ContextActionAdd internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ContextActionAdd();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ContextActionAdd getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ContextActionAdd.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ContextActionAdd build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ContextActionAdd buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ContextActionAdd buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.ContextActionAdd returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ContextActionAdd other) {
        if (other == com.sapta.htonline.MumbleProto.ContextActionAdd.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        if (other.hasContext()) {
          setContext(other.getContext());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setAction(input.readString());
              break;
            }
            case 18: {
              setText(input.readString());
              break;
            }
            case 24: {
              setContext(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required string action = 1;
      public boolean hasAction() {
        return result.hasAction();
      }
      public String getAction() {
        return result.getAction();
      }
      public Builder setAction(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder clearAction() {
        result.hasAction = false;
        result.action_ = getDefaultInstance().getAction();
        return this;
      }
      
      // required string text = 2;
      public boolean hasText() {
        return result.hasText();
      }
      public String getText() {
        return result.getText();
      }
      public Builder setText(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
      
      // optional uint32 context = 3;
      public boolean hasContext() {
        return result.hasContext();
      }
      public int getContext() {
        return result.getContext();
      }
      public Builder setContext(int value) {
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ContextActionAdd)
    }
    
    static {
      defaultInstance = new ContextActionAdd(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ContextActionAdd)
  }
  
  public static final class ContextAction extends
      com.google.protobuf.GeneratedMessageLite {
    // Use ContextAction.newBuilder() to construct.
    private ContextAction() {
      initFields();
    }
    private ContextAction(boolean noInit) {}
    
    private static final ContextAction defaultInstance;
    public static ContextAction getDefaultInstance() {
      return defaultInstance;
    }
    
    public ContextAction getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional uint32 channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // required string action = 3;
    public static final int ACTION_FIELD_NUMBER = 3;
    private boolean hasAction;
    private String action_ = "";
    public boolean hasAction() { return hasAction; }
    public String getAction() { return action_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAction) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSession()) {
        output.writeUInt32(1, getSession());
      }
      if (hasChannelId()) {
        output.writeUInt32(2, getChannelId());
      }
      if (hasAction()) {
        output.writeString(3, getAction());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSession());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getChannelId());
      }
      if (hasAction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getAction());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.ContextAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.ContextAction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.ContextAction, Builder> {
      private com.sapta.htonline.MumbleProto.ContextAction result;
      
      // Construct using com.example.mumbleclient.MumbleProto.ContextAction.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.ContextAction();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.ContextAction internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.ContextAction();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.ContextAction getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.ContextAction.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.ContextAction build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.ContextAction buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.ContextAction buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.ContextAction returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.ContextAction other) {
        if (other == com.sapta.htonline.MumbleProto.ContextAction.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSession(input.readUInt32());
              break;
            }
            case 16: {
              setChannelId(input.readUInt32());
              break;
            }
            case 26: {
              setAction(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 session = 1;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional uint32 channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // required string action = 3;
      public boolean hasAction() {
        return result.hasAction();
      }
      public String getAction() {
        return result.getAction();
      }
      public Builder setAction(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder clearAction() {
        result.hasAction = false;
        result.action_ = getDefaultInstance().getAction();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.ContextAction)
    }
    
    static {
      defaultInstance = new ContextAction(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.ContextAction)
  }
  
  public static final class UserList extends
      com.google.protobuf.GeneratedMessageLite {
    // Use UserList.newBuilder() to construct.
    private UserList() {
      initFields();
    }
    private UserList(boolean noInit) {}
    
    private static final UserList defaultInstance;
    public static UserList getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class User extends
        com.google.protobuf.GeneratedMessageLite {
      // Use User.newBuilder() to construct.
      private User() {
        initFields();
      }
      private User(boolean noInit) {}
      
      private static final User defaultInstance;
      public static User getDefaultInstance() {
        return defaultInstance;
      }
      
      public User getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required uint32 user_id = 1;
      public static final int USER_ID_FIELD_NUMBER = 1;
      private boolean hasUserId;
      private int userId_ = 0;
      public boolean hasUserId() { return hasUserId; }
      public int getUserId() { return userId_; }
      
      // optional string name = 2;
      public static final int NAME_FIELD_NUMBER = 2;
      private boolean hasName;
      private String name_ = "";
      public boolean hasName() { return hasName; }
      public String getName() { return name_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasUserId) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasUserId()) {
          output.writeUInt32(1, getUserId());
        }
        if (hasName()) {
          output.writeString(2, getName());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasUserId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, getUserId());
        }
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getName());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserList.User parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserList.User prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.UserList.User, Builder> {
        private com.sapta.htonline.MumbleProto.UserList.User result;
        
        // Construct using com.example.mumbleclient.MumbleProto.UserList.User.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.UserList.User();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.UserList.User internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.UserList.User();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.UserList.User getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.UserList.User.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.UserList.User build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.UserList.User buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.UserList.User buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.sapta.htonline.MumbleProto.UserList.User returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserList.User other) {
          if (other == com.sapta.htonline.MumbleProto.UserList.User.getDefaultInstance()) return this;
          if (other.hasUserId()) {
            setUserId(other.getUserId());
          }
          if (other.hasName()) {
            setName(other.getName());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                setUserId(input.readUInt32());
                break;
              }
              case 18: {
                setName(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required uint32 user_id = 1;
        public boolean hasUserId() {
          return result.hasUserId();
        }
        public int getUserId() {
          return result.getUserId();
        }
        public Builder setUserId(int value) {
          result.hasUserId = true;
          result.userId_ = value;
          return this;
        }
        public Builder clearUserId() {
          result.hasUserId = false;
          result.userId_ = 0;
          return this;
        }
        
        // optional string name = 2;
        public boolean hasName() {
          return result.hasName();
        }
        public String getName() {
          return result.getName();
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.UserList.User)
      }
      
      static {
        defaultInstance = new User(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.UserList.User)
    }
    
    // repeated .MumbleProto.UserList.User users = 1;
    public static final int USERS_FIELD_NUMBER = 1;
    private java.util.List<com.sapta.htonline.MumbleProto.UserList.User> users_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sapta.htonline.MumbleProto.UserList.User> getUsersList() {
      return users_;
    }
    public int getUsersCount() { return users_.size(); }
    public com.sapta.htonline.MumbleProto.UserList.User getUsers(int index) {
      return users_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.sapta.htonline.MumbleProto.UserList.User element : getUsersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.sapta.htonline.MumbleProto.UserList.User element : getUsersList()) {
        output.writeMessage(1, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.sapta.htonline.MumbleProto.UserList.User element : getUsersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.UserList, Builder> {
      private com.sapta.htonline.MumbleProto.UserList result;
      
      // Construct using com.example.mumbleclient.MumbleProto.UserList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.UserList();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.UserList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.UserList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.UserList getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.UserList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.UserList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.UserList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.UserList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.users_ != java.util.Collections.EMPTY_LIST) {
          result.users_ =
            java.util.Collections.unmodifiableList(result.users_);
        }
        com.sapta.htonline.MumbleProto.UserList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserList other) {
        if (other == com.sapta.htonline.MumbleProto.UserList.getDefaultInstance()) return this;
        if (!other.users_.isEmpty()) {
          if (result.users_.isEmpty()) {
            result.users_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.UserList.User>();
          }
          result.users_.addAll(other.users_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              com.sapta.htonline.MumbleProto.UserList.User.Builder subBuilder = com.sapta.htonline.MumbleProto.UserList.User.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUsers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MumbleProto.UserList.User users = 1;
      public java.util.List<com.sapta.htonline.MumbleProto.UserList.User> getUsersList() {
        return java.util.Collections.unmodifiableList(result.users_);
      }
      public int getUsersCount() {
        return result.getUsersCount();
      }
      public com.sapta.htonline.MumbleProto.UserList.User getUsers(int index) {
        return result.getUsers(index);
      }
      public Builder setUsers(int index, com.sapta.htonline.MumbleProto.UserList.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.users_.set(index, value);
        return this;
      }
      public Builder setUsers(int index, com.sapta.htonline.MumbleProto.UserList.User.Builder builderForValue) {
        result.users_.set(index, builderForValue.build());
        return this;
      }
      public Builder addUsers(com.sapta.htonline.MumbleProto.UserList.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.users_.isEmpty()) {
          result.users_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.UserList.User>();
        }
        result.users_.add(value);
        return this;
      }
      public Builder addUsers(com.sapta.htonline.MumbleProto.UserList.User.Builder builderForValue) {
        if (result.users_.isEmpty()) {
          result.users_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.UserList.User>();
        }
        result.users_.add(builderForValue.build());
        return this;
      }
      public Builder addAllUsers(
          Iterable<? extends com.sapta.htonline.MumbleProto.UserList.User> values) {
        if (result.users_.isEmpty()) {
          result.users_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.UserList.User>();
        }
        super.addAll(values, result.users_);
        return this;
      }
      public Builder clearUsers() {
        result.users_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.UserList)
    }
    
    static {
      defaultInstance = new UserList(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.UserList)
  }
  
  public static final class VoiceTarget extends
      com.google.protobuf.GeneratedMessageLite {
    // Use VoiceTarget.newBuilder() to construct.
    private VoiceTarget() {
      initFields();
    }
    private VoiceTarget(boolean noInit) {}
    
    private static final VoiceTarget defaultInstance;
    public static VoiceTarget getDefaultInstance() {
      return defaultInstance;
    }
    
    public VoiceTarget getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class Target extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Target.newBuilder() to construct.
      private Target() {
        initFields();
      }
      private Target(boolean noInit) {}
      
      private static final Target defaultInstance;
      public static Target getDefaultInstance() {
        return defaultInstance;
      }
      
      public Target getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // repeated uint32 session = 1;
      public static final int SESSION_FIELD_NUMBER = 1;
      private java.util.List<Integer> session_ =
        java.util.Collections.emptyList();
      public java.util.List<Integer> getSessionList() {
        return session_;
      }
      public int getSessionCount() { return session_.size(); }
      public int getSession(int index) {
        return session_.get(index);
      }
      
      // optional uint32 channel_id = 2;
      public static final int CHANNEL_ID_FIELD_NUMBER = 2;
      private boolean hasChannelId;
      private int channelId_ = 0;
      public boolean hasChannelId() { return hasChannelId; }
      public int getChannelId() { return channelId_; }
      
      // optional string group = 3;
      public static final int GROUP_FIELD_NUMBER = 3;
      private boolean hasGroup;
      private String group_ = "";
      public boolean hasGroup() { return hasGroup; }
      public String getGroup() { return group_; }
      
      // optional bool links = 4 [default = false];
      public static final int LINKS_FIELD_NUMBER = 4;
      private boolean hasLinks;
      private boolean links_ = false;
      public boolean hasLinks() { return hasLinks; }
      public boolean getLinks() { return links_; }
      
      // optional bool children = 5 [default = false];
      public static final int CHILDREN_FIELD_NUMBER = 5;
      private boolean hasChildren;
      private boolean children_ = false;
      public boolean hasChildren() { return hasChildren; }
      public boolean getChildren() { return children_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int element : getSessionList()) {
          output.writeUInt32(1, element);
        }
        if (hasChannelId()) {
          output.writeUInt32(2, getChannelId());
        }
        if (hasGroup()) {
          output.writeString(3, getGroup());
        }
        if (hasLinks()) {
          output.writeBool(4, getLinks());
        }
        if (hasChildren()) {
          output.writeBool(5, getChildren());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        {
          int dataSize = 0;
          for (int element : getSessionList()) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * getSessionList().size();
        }
        if (hasChannelId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getChannelId());
        }
        if (hasGroup()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getGroup());
        }
        if (hasLinks()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, getLinks());
        }
        if (hasChildren()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, getChildren());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.VoiceTarget.Target parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.VoiceTarget.Target prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.VoiceTarget.Target, Builder> {
        private com.sapta.htonline.MumbleProto.VoiceTarget.Target result;
        
        // Construct using com.example.mumbleclient.MumbleProto.VoiceTarget.Target.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.VoiceTarget.Target();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.VoiceTarget.Target internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.VoiceTarget.Target();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.VoiceTarget.Target getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.VoiceTarget.Target.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.VoiceTarget.Target build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.VoiceTarget.Target buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.VoiceTarget.Target buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.session_ != java.util.Collections.EMPTY_LIST) {
            result.session_ =
              java.util.Collections.unmodifiableList(result.session_);
          }
          com.sapta.htonline.MumbleProto.VoiceTarget.Target returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.VoiceTarget.Target other) {
          if (other == com.sapta.htonline.MumbleProto.VoiceTarget.Target.getDefaultInstance()) return this;
          if (!other.session_.isEmpty()) {
            if (result.session_.isEmpty()) {
              result.session_ = new java.util.ArrayList<Integer>();
            }
            result.session_.addAll(other.session_);
          }
          if (other.hasChannelId()) {
            setChannelId(other.getChannelId());
          }
          if (other.hasGroup()) {
            setGroup(other.getGroup());
          }
          if (other.hasLinks()) {
            setLinks(other.getLinks());
          }
          if (other.hasChildren()) {
            setChildren(other.getChildren());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                addSession(input.readUInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addSession(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                setChannelId(input.readUInt32());
                break;
              }
              case 26: {
                setGroup(input.readString());
                break;
              }
              case 32: {
                setLinks(input.readBool());
                break;
              }
              case 40: {
                setChildren(input.readBool());
                break;
              }
            }
          }
        }
        
        
        // repeated uint32 session = 1;
        public java.util.List<Integer> getSessionList() {
          return java.util.Collections.unmodifiableList(result.session_);
        }
        public int getSessionCount() {
          return result.getSessionCount();
        }
        public int getSession(int index) {
          return result.getSession(index);
        }
        public Builder setSession(int index, int value) {
          result.session_.set(index, value);
          return this;
        }
        public Builder addSession(int value) {
          if (result.session_.isEmpty()) {
            result.session_ = new java.util.ArrayList<Integer>();
          }
          result.session_.add(value);
          return this;
        }
        public Builder addAllSession(
            Iterable<? extends Integer> values) {
          if (result.session_.isEmpty()) {
            result.session_ = new java.util.ArrayList<Integer>();
          }
          super.addAll(values, result.session_);
          return this;
        }
        public Builder clearSession() {
          result.session_ = java.util.Collections.emptyList();
          return this;
        }
        
        // optional uint32 channel_id = 2;
        public boolean hasChannelId() {
          return result.hasChannelId();
        }
        public int getChannelId() {
          return result.getChannelId();
        }
        public Builder setChannelId(int value) {
          result.hasChannelId = true;
          result.channelId_ = value;
          return this;
        }
        public Builder clearChannelId() {
          result.hasChannelId = false;
          result.channelId_ = 0;
          return this;
        }
        
        // optional string group = 3;
        public boolean hasGroup() {
          return result.hasGroup();
        }
        public String getGroup() {
          return result.getGroup();
        }
        public Builder setGroup(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGroup = true;
          result.group_ = value;
          return this;
        }
        public Builder clearGroup() {
          result.hasGroup = false;
          result.group_ = getDefaultInstance().getGroup();
          return this;
        }
        
        // optional bool links = 4 [default = false];
        public boolean hasLinks() {
          return result.hasLinks();
        }
        public boolean getLinks() {
          return result.getLinks();
        }
        public Builder setLinks(boolean value) {
          result.hasLinks = true;
          result.links_ = value;
          return this;
        }
        public Builder clearLinks() {
          result.hasLinks = false;
          result.links_ = false;
          return this;
        }
        
        // optional bool children = 5 [default = false];
        public boolean hasChildren() {
          return result.hasChildren();
        }
        public boolean getChildren() {
          return result.getChildren();
        }
        public Builder setChildren(boolean value) {
          result.hasChildren = true;
          result.children_ = value;
          return this;
        }
        public Builder clearChildren() {
          result.hasChildren = false;
          result.children_ = false;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.VoiceTarget.Target)
      }
      
      static {
        defaultInstance = new Target(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget.Target)
    }
    
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // repeated .MumbleProto.VoiceTarget.Target targets = 2;
    public static final int TARGETS_FIELD_NUMBER = 2;
    private java.util.List<com.sapta.htonline.MumbleProto.VoiceTarget.Target> targets_ =
      java.util.Collections.emptyList();
    public java.util.List<com.sapta.htonline.MumbleProto.VoiceTarget.Target> getTargetsList() {
      return targets_;
    }
    public int getTargetsCount() { return targets_.size(); }
    public com.sapta.htonline.MumbleProto.VoiceTarget.Target getTargets(int index) {
      return targets_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeUInt32(1, getId());
      }
      for (com.sapta.htonline.MumbleProto.VoiceTarget.Target element : getTargetsList()) {
        output.writeMessage(2, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getId());
      }
      for (com.sapta.htonline.MumbleProto.VoiceTarget.Target element : getTargetsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.VoiceTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.VoiceTarget prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.VoiceTarget, Builder> {
      private com.sapta.htonline.MumbleProto.VoiceTarget result;
      
      // Construct using com.example.mumbleclient.MumbleProto.VoiceTarget.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.VoiceTarget();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.VoiceTarget internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.VoiceTarget();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.VoiceTarget getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.VoiceTarget.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.VoiceTarget build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.VoiceTarget buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.VoiceTarget buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.targets_ != java.util.Collections.EMPTY_LIST) {
          result.targets_ =
            java.util.Collections.unmodifiableList(result.targets_);
        }
        com.sapta.htonline.MumbleProto.VoiceTarget returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.VoiceTarget other) {
        if (other == com.sapta.htonline.MumbleProto.VoiceTarget.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.targets_.isEmpty()) {
          if (result.targets_.isEmpty()) {
            result.targets_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.VoiceTarget.Target>();
          }
          result.targets_.addAll(other.targets_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readUInt32());
              break;
            }
            case 18: {
              com.sapta.htonline.MumbleProto.VoiceTarget.Target.Builder subBuilder = com.sapta.htonline.MumbleProto.VoiceTarget.Target.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTargets(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // repeated .MumbleProto.VoiceTarget.Target targets = 2;
      public java.util.List<com.sapta.htonline.MumbleProto.VoiceTarget.Target> getTargetsList() {
        return java.util.Collections.unmodifiableList(result.targets_);
      }
      public int getTargetsCount() {
        return result.getTargetsCount();
      }
      public com.sapta.htonline.MumbleProto.VoiceTarget.Target getTargets(int index) {
        return result.getTargets(index);
      }
      public Builder setTargets(int index, com.sapta.htonline.MumbleProto.VoiceTarget.Target value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.targets_.set(index, value);
        return this;
      }
      public Builder setTargets(int index, com.sapta.htonline.MumbleProto.VoiceTarget.Target.Builder builderForValue) {
        result.targets_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTargets(com.sapta.htonline.MumbleProto.VoiceTarget.Target value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.targets_.isEmpty()) {
          result.targets_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.VoiceTarget.Target>();
        }
        result.targets_.add(value);
        return this;
      }
      public Builder addTargets(com.sapta.htonline.MumbleProto.VoiceTarget.Target.Builder builderForValue) {
        if (result.targets_.isEmpty()) {
          result.targets_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.VoiceTarget.Target>();
        }
        result.targets_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTargets(
          Iterable<? extends com.sapta.htonline.MumbleProto.VoiceTarget.Target> values) {
        if (result.targets_.isEmpty()) {
          result.targets_ = new java.util.ArrayList<com.sapta.htonline.MumbleProto.VoiceTarget.Target>();
        }
        super.addAll(values, result.targets_);
        return this;
      }
      public Builder clearTargets() {
        result.targets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.VoiceTarget)
    }
    
    static {
      defaultInstance = new VoiceTarget(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget)
  }
  
  public static final class PermissionQuery extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PermissionQuery.newBuilder() to construct.
    private PermissionQuery() {
      initFields();
    }
    private PermissionQuery(boolean noInit) {}
    
    private static final PermissionQuery defaultInstance;
    public static PermissionQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public PermissionQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional uint32 channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private int channelId_ = 0;
    public boolean hasChannelId() { return hasChannelId; }
    public int getChannelId() { return channelId_; }
    
    // optional uint32 permissions = 2;
    public static final int PERMISSIONS_FIELD_NUMBER = 2;
    private boolean hasPermissions;
    private int permissions_ = 0;
    public boolean hasPermissions() { return hasPermissions; }
    public int getPermissions() { return permissions_; }
    
    // optional bool flush = 3 [default = false];
    public static final int FLUSH_FIELD_NUMBER = 3;
    private boolean hasFlush;
    private boolean flush_ = false;
    public boolean hasFlush() { return hasFlush; }
    public boolean getFlush() { return flush_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeUInt32(1, getChannelId());
      }
      if (hasPermissions()) {
        output.writeUInt32(2, getPermissions());
      }
      if (hasFlush()) {
        output.writeBool(3, getFlush());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getChannelId());
      }
      if (hasPermissions()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getPermissions());
      }
      if (hasFlush()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getFlush());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.PermissionQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.PermissionQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.PermissionQuery, Builder> {
      private com.sapta.htonline.MumbleProto.PermissionQuery result;
      
      // Construct using com.example.mumbleclient.MumbleProto.PermissionQuery.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.PermissionQuery();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.PermissionQuery internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.PermissionQuery();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.PermissionQuery getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.PermissionQuery.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.PermissionQuery build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.PermissionQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.PermissionQuery buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.PermissionQuery returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.PermissionQuery other) {
        if (other == com.sapta.htonline.MumbleProto.PermissionQuery.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasPermissions()) {
          setPermissions(other.getPermissions());
        }
        if (other.hasFlush()) {
          setFlush(other.getFlush());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setChannelId(input.readUInt32());
              break;
            }
            case 16: {
              setPermissions(input.readUInt32());
              break;
            }
            case 24: {
              setFlush(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public int getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(int value) {
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      // optional uint32 permissions = 2;
      public boolean hasPermissions() {
        return result.hasPermissions();
      }
      public int getPermissions() {
        return result.getPermissions();
      }
      public Builder setPermissions(int value) {
        result.hasPermissions = true;
        result.permissions_ = value;
        return this;
      }
      public Builder clearPermissions() {
        result.hasPermissions = false;
        result.permissions_ = 0;
        return this;
      }
      
      // optional bool flush = 3 [default = false];
      public boolean hasFlush() {
        return result.hasFlush();
      }
      public boolean getFlush() {
        return result.getFlush();
      }
      public Builder setFlush(boolean value) {
        result.hasFlush = true;
        result.flush_ = value;
        return this;
      }
      public Builder clearFlush() {
        result.hasFlush = false;
        result.flush_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.PermissionQuery)
    }
    
    static {
      defaultInstance = new PermissionQuery(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.PermissionQuery)
  }
  
  public static final class CodecVersion extends
      com.google.protobuf.GeneratedMessageLite {
    // Use CodecVersion.newBuilder() to construct.
    private CodecVersion() {
      initFields();
    }
    private CodecVersion(boolean noInit) {}
    
    private static final CodecVersion defaultInstance;
    public static CodecVersion getDefaultInstance() {
      return defaultInstance;
    }
    
    public CodecVersion getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required int32 alpha = 1;
    public static final int ALPHA_FIELD_NUMBER = 1;
    private boolean hasAlpha;
    private int alpha_ = 0;
    public boolean hasAlpha() { return hasAlpha; }
    public int getAlpha() { return alpha_; }
    
    // required int32 beta = 2;
    public static final int BETA_FIELD_NUMBER = 2;
    private boolean hasBeta;
    private int beta_ = 0;
    public boolean hasBeta() { return hasBeta; }
    public int getBeta() { return beta_; }
    
    // required bool prefer_alpha = 3 [default = true];
    public static final int PREFER_ALPHA_FIELD_NUMBER = 3;
    private boolean hasPreferAlpha;
    private boolean preferAlpha_ = true;
    public boolean hasPreferAlpha() { return hasPreferAlpha; }
    public boolean getPreferAlpha() { return preferAlpha_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAlpha) return false;
      if (!hasBeta) return false;
      if (!hasPreferAlpha) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAlpha()) {
        output.writeInt32(1, getAlpha());
      }
      if (hasBeta()) {
        output.writeInt32(2, getBeta());
      }
      if (hasPreferAlpha()) {
        output.writeBool(3, getPreferAlpha());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAlpha()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getAlpha());
      }
      if (hasBeta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getBeta());
      }
      if (hasPreferAlpha()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getPreferAlpha());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.CodecVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.CodecVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.CodecVersion, Builder> {
      private com.sapta.htonline.MumbleProto.CodecVersion result;
      
      // Construct using com.example.mumbleclient.MumbleProto.CodecVersion.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.CodecVersion();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.CodecVersion internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.CodecVersion();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.CodecVersion getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.CodecVersion.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.CodecVersion build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.CodecVersion buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.CodecVersion buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.sapta.htonline.MumbleProto.CodecVersion returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.CodecVersion other) {
        if (other == com.sapta.htonline.MumbleProto.CodecVersion.getDefaultInstance()) return this;
        if (other.hasAlpha()) {
          setAlpha(other.getAlpha());
        }
        if (other.hasBeta()) {
          setBeta(other.getBeta());
        }
        if (other.hasPreferAlpha()) {
          setPreferAlpha(other.getPreferAlpha());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setAlpha(input.readInt32());
              break;
            }
            case 16: {
              setBeta(input.readInt32());
              break;
            }
            case 24: {
              setPreferAlpha(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required int32 alpha = 1;
      public boolean hasAlpha() {
        return result.hasAlpha();
      }
      public int getAlpha() {
        return result.getAlpha();
      }
      public Builder setAlpha(int value) {
        result.hasAlpha = true;
        result.alpha_ = value;
        return this;
      }
      public Builder clearAlpha() {
        result.hasAlpha = false;
        result.alpha_ = 0;
        return this;
      }
      
      // required int32 beta = 2;
      public boolean hasBeta() {
        return result.hasBeta();
      }
      public int getBeta() {
        return result.getBeta();
      }
      public Builder setBeta(int value) {
        result.hasBeta = true;
        result.beta_ = value;
        return this;
      }
      public Builder clearBeta() {
        result.hasBeta = false;
        result.beta_ = 0;
        return this;
      }
      
      // required bool prefer_alpha = 3 [default = true];
      public boolean hasPreferAlpha() {
        return result.hasPreferAlpha();
      }
      public boolean getPreferAlpha() {
        return result.getPreferAlpha();
      }
      public Builder setPreferAlpha(boolean value) {
        result.hasPreferAlpha = true;
        result.preferAlpha_ = value;
        return this;
      }
      public Builder clearPreferAlpha() {
        result.hasPreferAlpha = false;
        result.preferAlpha_ = true;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.CodecVersion)
    }
    
    static {
      defaultInstance = new CodecVersion(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.CodecVersion)
  }
  
  public static final class UserStats extends
      com.google.protobuf.GeneratedMessageLite {
    // Use UserStats.newBuilder() to construct.
    private UserStats() {
      initFields();
    }
    private UserStats(boolean noInit) {}
    
    private static final UserStats defaultInstance;
    public static UserStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class Stats extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Stats.newBuilder() to construct.
      private Stats() {
        initFields();
      }
      private Stats(boolean noInit) {}
      
      private static final Stats defaultInstance;
      public static Stats getDefaultInstance() {
        return defaultInstance;
      }
      
      public Stats getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // optional uint32 good = 1;
      public static final int GOOD_FIELD_NUMBER = 1;
      private boolean hasGood;
      private int good_ = 0;
      public boolean hasGood() { return hasGood; }
      public int getGood() { return good_; }
      
      // optional uint32 late = 2;
      public static final int LATE_FIELD_NUMBER = 2;
      private boolean hasLate;
      private int late_ = 0;
      public boolean hasLate() { return hasLate; }
      public int getLate() { return late_; }
      
      // optional uint32 lost = 3;
      public static final int LOST_FIELD_NUMBER = 3;
      private boolean hasLost;
      private int lost_ = 0;
      public boolean hasLost() { return hasLost; }
      public int getLost() { return lost_; }
      
      // optional uint32 resync = 4;
      public static final int RESYNC_FIELD_NUMBER = 4;
      private boolean hasResync;
      private int resync_ = 0;
      public boolean hasResync() { return hasResync; }
      public int getResync() { return resync_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasGood()) {
          output.writeUInt32(1, getGood());
        }
        if (hasLate()) {
          output.writeUInt32(2, getLate());
        }
        if (hasLost()) {
          output.writeUInt32(3, getLost());
        }
        if (hasResync()) {
          output.writeUInt32(4, getResync());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasGood()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, getGood());
        }
        if (hasLate()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getLate());
        }
        if (hasLost()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, getLost());
        }
        if (hasResync()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, getResync());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.sapta.htonline.MumbleProto.UserStats.Stats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserStats.Stats prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.sapta.htonline.MumbleProto.UserStats.Stats, Builder> {
        private com.sapta.htonline.MumbleProto.UserStats.Stats result;
        
        // Construct using com.example.mumbleclient.MumbleProto.UserStats.Stats.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.sapta.htonline.MumbleProto.UserStats.Stats();
          return builder;
        }
        
        protected com.sapta.htonline.MumbleProto.UserStats.Stats internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.sapta.htonline.MumbleProto.UserStats.Stats();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.sapta.htonline.MumbleProto.UserStats.Stats getDefaultInstanceForType() {
          return com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.sapta.htonline.MumbleProto.UserStats.Stats build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.sapta.htonline.MumbleProto.UserStats.Stats buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.sapta.htonline.MumbleProto.UserStats.Stats buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.sapta.htonline.MumbleProto.UserStats.Stats returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserStats.Stats other) {
          if (other == com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance()) return this;
          if (other.hasGood()) {
            setGood(other.getGood());
          }
          if (other.hasLate()) {
            setLate(other.getLate());
          }
          if (other.hasLost()) {
            setLost(other.getLost());
          }
          if (other.hasResync()) {
            setResync(other.getResync());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                setGood(input.readUInt32());
                break;
              }
              case 16: {
                setLate(input.readUInt32());
                break;
              }
              case 24: {
                setLost(input.readUInt32());
                break;
              }
              case 32: {
                setResync(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // optional uint32 good = 1;
        public boolean hasGood() {
          return result.hasGood();
        }
        public int getGood() {
          return result.getGood();
        }
        public Builder setGood(int value) {
          result.hasGood = true;
          result.good_ = value;
          return this;
        }
        public Builder clearGood() {
          result.hasGood = false;
          result.good_ = 0;
          return this;
        }
        
        // optional uint32 late = 2;
        public boolean hasLate() {
          return result.hasLate();
        }
        public int getLate() {
          return result.getLate();
        }
        public Builder setLate(int value) {
          result.hasLate = true;
          result.late_ = value;
          return this;
        }
        public Builder clearLate() {
          result.hasLate = false;
          result.late_ = 0;
          return this;
        }
        
        // optional uint32 lost = 3;
        public boolean hasLost() {
          return result.hasLost();
        }
        public int getLost() {
          return result.getLost();
        }
        public Builder setLost(int value) {
          result.hasLost = true;
          result.lost_ = value;
          return this;
        }
        public Builder clearLost() {
          result.hasLost = false;
          result.lost_ = 0;
          return this;
        }
        
        // optional uint32 resync = 4;
        public boolean hasResync() {
          return result.hasResync();
        }
        public int getResync() {
          return result.getResync();
        }
        public Builder setResync(int value) {
          result.hasResync = true;
          result.resync_ = value;
          return this;
        }
        public Builder clearResync() {
          result.hasResync = false;
          result.resync_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MumbleProto.UserStats.Stats)
      }
      
      static {
        defaultInstance = new Stats(true);
        com.sapta.htonline.MumbleProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MumbleProto.UserStats.Stats)
    }
    
    // optional uint32 session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private boolean hasSession;
    private int session_ = 0;
    public boolean hasSession() { return hasSession; }
    public int getSession() { return session_; }
    
    // optional bool stats_only = 2 [default = false];
    public static final int STATS_ONLY_FIELD_NUMBER = 2;
    private boolean hasStatsOnly;
    private boolean statsOnly_ = false;
    public boolean hasStatsOnly() { return hasStatsOnly; }
    public boolean getStatsOnly() { return statsOnly_; }
    
    // repeated bytes certificates = 3;
    public static final int CERTIFICATES_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> certificates_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getCertificatesList() {
      return certificates_;
    }
    public int getCertificatesCount() { return certificates_.size(); }
    public com.google.protobuf.ByteString getCertificates(int index) {
      return certificates_.get(index);
    }
    
    // optional .MumbleProto.UserStats.Stats from_client = 4;
    public static final int FROM_CLIENT_FIELD_NUMBER = 4;
    private boolean hasFromClient;
    private com.sapta.htonline.MumbleProto.UserStats.Stats fromClient_;
    public boolean hasFromClient() { return hasFromClient; }
    public com.sapta.htonline.MumbleProto.UserStats.Stats getFromClient() { return fromClient_; }
    
    // optional .MumbleProto.UserStats.Stats from_server = 5;
    public static final int FROM_SERVER_FIELD_NUMBER = 5;
    private boolean hasFromServer;
    private com.sapta.htonline.MumbleProto.UserStats.Stats fromServer_;
    public boolean hasFromServer() { return hasFromServer; }
    public com.sapta.htonline.MumbleProto.UserStats.Stats getFromServer() { return fromServer_; }
    
    // optional uint32 udp_packets = 6;
    public static final int UDP_PACKETS_FIELD_NUMBER = 6;
    private boolean hasUdpPackets;
    private int udpPackets_ = 0;
    public boolean hasUdpPackets() { return hasUdpPackets; }
    public int getUdpPackets() { return udpPackets_; }
    
    // optional uint32 tcp_packets = 7;
    public static final int TCP_PACKETS_FIELD_NUMBER = 7;
    private boolean hasTcpPackets;
    private int tcpPackets_ = 0;
    public boolean hasTcpPackets() { return hasTcpPackets; }
    public int getTcpPackets() { return tcpPackets_; }
    
    // optional float udp_ping_avg = 8;
    public static final int UDP_PING_AVG_FIELD_NUMBER = 8;
    private boolean hasUdpPingAvg;
    private float udpPingAvg_ = 0F;
    public boolean hasUdpPingAvg() { return hasUdpPingAvg; }
    public float getUdpPingAvg() { return udpPingAvg_; }
    
    // optional float udp_ping_var = 9;
    public static final int UDP_PING_VAR_FIELD_NUMBER = 9;
    private boolean hasUdpPingVar;
    private float udpPingVar_ = 0F;
    public boolean hasUdpPingVar() { return hasUdpPingVar; }
    public float getUdpPingVar() { return udpPingVar_; }
    
    // optional float tcp_ping_avg = 10;
    public static final int TCP_PING_AVG_FIELD_NUMBER = 10;
    private boolean hasTcpPingAvg;
    private float tcpPingAvg_ = 0F;
    public boolean hasTcpPingAvg() { return hasTcpPingAvg; }
    public float getTcpPingAvg() { return tcpPingAvg_; }
    
    // optional float tcp_ping_var = 11;
    public static final int TCP_PING_VAR_FIELD_NUMBER = 11;
    private boolean hasTcpPingVar;
    private float tcpPingVar_ = 0F;
    public boolean hasTcpPingVar() { return hasTcpPingVar; }
    public float getTcpPingVar() { return tcpPingVar_; }
    
    // optional .MumbleProto.Version version = 12;
    public static final int VERSION_FIELD_NUMBER = 12;
    private boolean hasVersion;
    private com.sapta.htonline.MumbleProto.Version version_;
    public boolean hasVersion() { return hasVersion; }
    public com.sapta.htonline.MumbleProto.Version getVersion() { return version_; }
    
    // repeated int32 celt_versions = 13;
    public static final int CELT_VERSIONS_FIELD_NUMBER = 13;
    private java.util.List<Integer> celtVersions_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getCeltVersionsList() {
      return celtVersions_;
    }
    public int getCeltVersionsCount() { return celtVersions_.size(); }
    public int getCeltVersions(int index) {
      return celtVersions_.get(index);
    }
    
    // optional bytes address = 14;
    public static final int ADDRESS_FIELD_NUMBER = 14;
    private boolean hasAddress;
    private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasAddress() { return hasAddress; }
    public com.google.protobuf.ByteString getAddress() { return address_; }
    
    // optional uint32 bandwidth = 15;
    public static final int BANDWIDTH_FIELD_NUMBER = 15;
    private boolean hasBandwidth;
    private int bandwidth_ = 0;
    public boolean hasBandwidth() { return hasBandwidth; }
    public int getBandwidth() { return bandwidth_; }
    
    // optional uint32 onlinesecs = 16;
    public static final int ONLINESECS_FIELD_NUMBER = 16;
    private boolean hasOnlinesecs;
    private int onlinesecs_ = 0;
    public boolean hasOnlinesecs() { return hasOnlinesecs; }
    public int getOnlinesecs() { return onlinesecs_; }
    
    // optional uint32 idlesecs = 17;
    public static final int IDLESECS_FIELD_NUMBER = 17;
    private boolean hasIdlesecs;
    private int idlesecs_ = 0;
    public boolean hasIdlesecs() { return hasIdlesecs; }
    public int getIdlesecs() { return idlesecs_; }
    
    // optional bool strong_certificate = 18 [default = false];
    public static final int STRONG_CERTIFICATE_FIELD_NUMBER = 18;
    private boolean hasStrongCertificate;
    private boolean strongCertificate_ = false;
    public boolean hasStrongCertificate() { return hasStrongCertificate; }
    public boolean getStrongCertificate() { return strongCertificate_; }
    
    private void initFields() {
      fromClient_ = com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance();
      fromServer_ = com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance();
      version_ = com.sapta.htonline.MumbleProto.Version.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSession()) {
        output.writeUInt32(1, getSession());
      }
      if (hasStatsOnly()) {
        output.writeBool(2, getStatsOnly());
      }
      for (com.google.protobuf.ByteString element : getCertificatesList()) {
        output.writeBytes(3, element);
      }
      if (hasFromClient()) {
        output.writeMessage(4, getFromClient());
      }
      if (hasFromServer()) {
        output.writeMessage(5, getFromServer());
      }
      if (hasUdpPackets()) {
        output.writeUInt32(6, getUdpPackets());
      }
      if (hasTcpPackets()) {
        output.writeUInt32(7, getTcpPackets());
      }
      if (hasUdpPingAvg()) {
        output.writeFloat(8, getUdpPingAvg());
      }
      if (hasUdpPingVar()) {
        output.writeFloat(9, getUdpPingVar());
      }
      if (hasTcpPingAvg()) {
        output.writeFloat(10, getTcpPingAvg());
      }
      if (hasTcpPingVar()) {
        output.writeFloat(11, getTcpPingVar());
      }
      if (hasVersion()) {
        output.writeMessage(12, getVersion());
      }
      for (int element : getCeltVersionsList()) {
        output.writeInt32(13, element);
      }
      if (hasAddress()) {
        output.writeBytes(14, getAddress());
      }
      if (hasBandwidth()) {
        output.writeUInt32(15, getBandwidth());
      }
      if (hasOnlinesecs()) {
        output.writeUInt32(16, getOnlinesecs());
      }
      if (hasIdlesecs()) {
        output.writeUInt32(17, getIdlesecs());
      }
      if (hasStrongCertificate()) {
        output.writeBool(18, getStrongCertificate());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSession());
      }
      if (hasStatsOnly()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getStatsOnly());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getCertificatesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCertificatesList().size();
      }
      if (hasFromClient()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFromClient());
      }
      if (hasFromServer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFromServer());
      }
      if (hasUdpPackets()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getUdpPackets());
      }
      if (hasTcpPackets()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getTcpPackets());
      }
      if (hasUdpPingAvg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, getUdpPingAvg());
      }
      if (hasUdpPingVar()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, getUdpPingVar());
      }
      if (hasTcpPingAvg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getTcpPingAvg());
      }
      if (hasTcpPingVar()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getTcpPingVar());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getVersion());
      }
      {
        int dataSize = 0;
        for (int element : getCeltVersionsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCeltVersionsList().size();
      }
      if (hasAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getAddress());
      }
      if (hasBandwidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, getBandwidth());
      }
      if (hasOnlinesecs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, getOnlinesecs());
      }
      if (hasIdlesecs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, getIdlesecs());
      }
      if (hasStrongCertificate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, getStrongCertificate());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.UserStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.UserStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.UserStats, Builder> {
      private com.sapta.htonline.MumbleProto.UserStats result;
      
      // Construct using com.example.mumbleclient.MumbleProto.UserStats.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.UserStats();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.UserStats internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.UserStats();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.UserStats getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.UserStats.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.UserStats build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.UserStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.UserStats buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.certificates_ != java.util.Collections.EMPTY_LIST) {
          result.certificates_ =
            java.util.Collections.unmodifiableList(result.certificates_);
        }
        if (result.celtVersions_ != java.util.Collections.EMPTY_LIST) {
          result.celtVersions_ =
            java.util.Collections.unmodifiableList(result.celtVersions_);
        }
        com.sapta.htonline.MumbleProto.UserStats returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.UserStats other) {
        if (other == com.sapta.htonline.MumbleProto.UserStats.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        if (other.hasStatsOnly()) {
          setStatsOnly(other.getStatsOnly());
        }
        if (!other.certificates_.isEmpty()) {
          if (result.certificates_.isEmpty()) {
            result.certificates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.certificates_.addAll(other.certificates_);
        }
        if (other.hasFromClient()) {
          mergeFromClient(other.getFromClient());
        }
        if (other.hasFromServer()) {
          mergeFromServer(other.getFromServer());
        }
        if (other.hasUdpPackets()) {
          setUdpPackets(other.getUdpPackets());
        }
        if (other.hasTcpPackets()) {
          setTcpPackets(other.getTcpPackets());
        }
        if (other.hasUdpPingAvg()) {
          setUdpPingAvg(other.getUdpPingAvg());
        }
        if (other.hasUdpPingVar()) {
          setUdpPingVar(other.getUdpPingVar());
        }
        if (other.hasTcpPingAvg()) {
          setTcpPingAvg(other.getTcpPingAvg());
        }
        if (other.hasTcpPingVar()) {
          setTcpPingVar(other.getTcpPingVar());
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (!other.celtVersions_.isEmpty()) {
          if (result.celtVersions_.isEmpty()) {
            result.celtVersions_ = new java.util.ArrayList<Integer>();
          }
          result.celtVersions_.addAll(other.celtVersions_);
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasBandwidth()) {
          setBandwidth(other.getBandwidth());
        }
        if (other.hasOnlinesecs()) {
          setOnlinesecs(other.getOnlinesecs());
        }
        if (other.hasIdlesecs()) {
          setIdlesecs(other.getIdlesecs());
        }
        if (other.hasStrongCertificate()) {
          setStrongCertificate(other.getStrongCertificate());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSession(input.readUInt32());
              break;
            }
            case 16: {
              setStatsOnly(input.readBool());
              break;
            }
            case 26: {
              addCertificates(input.readBytes());
              break;
            }
            case 34: {
              com.sapta.htonline.MumbleProto.UserStats.Stats.Builder subBuilder = com.sapta.htonline.MumbleProto.UserStats.Stats.newBuilder();
              if (hasFromClient()) {
                subBuilder.mergeFrom(getFromClient());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFromClient(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.sapta.htonline.MumbleProto.UserStats.Stats.Builder subBuilder = com.sapta.htonline.MumbleProto.UserStats.Stats.newBuilder();
              if (hasFromServer()) {
                subBuilder.mergeFrom(getFromServer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFromServer(subBuilder.buildPartial());
              break;
            }
            case 48: {
              setUdpPackets(input.readUInt32());
              break;
            }
            case 56: {
              setTcpPackets(input.readUInt32());
              break;
            }
            case 69: {
              setUdpPingAvg(input.readFloat());
              break;
            }
            case 77: {
              setUdpPingVar(input.readFloat());
              break;
            }
            case 85: {
              setTcpPingAvg(input.readFloat());
              break;
            }
            case 93: {
              setTcpPingVar(input.readFloat());
              break;
            }
            case 98: {
              com.sapta.htonline.MumbleProto.Version.Builder subBuilder = com.sapta.htonline.MumbleProto.Version.newBuilder();
              if (hasVersion()) {
                subBuilder.mergeFrom(getVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVersion(subBuilder.buildPartial());
              break;
            }
            case 104: {
              addCeltVersions(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCeltVersions(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              setAddress(input.readBytes());
              break;
            }
            case 120: {
              setBandwidth(input.readUInt32());
              break;
            }
            case 128: {
              setOnlinesecs(input.readUInt32());
              break;
            }
            case 136: {
              setIdlesecs(input.readUInt32());
              break;
            }
            case 144: {
              setStrongCertificate(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 session = 1;
      public boolean hasSession() {
        return result.hasSession();
      }
      public int getSession() {
        return result.getSession();
      }
      public Builder setSession(int value) {
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = 0;
        return this;
      }
      
      // optional bool stats_only = 2 [default = false];
      public boolean hasStatsOnly() {
        return result.hasStatsOnly();
      }
      public boolean getStatsOnly() {
        return result.getStatsOnly();
      }
      public Builder setStatsOnly(boolean value) {
        result.hasStatsOnly = true;
        result.statsOnly_ = value;
        return this;
      }
      public Builder clearStatsOnly() {
        result.hasStatsOnly = false;
        result.statsOnly_ = false;
        return this;
      }
      
      // repeated bytes certificates = 3;
      public java.util.List<com.google.protobuf.ByteString> getCertificatesList() {
        return java.util.Collections.unmodifiableList(result.certificates_);
      }
      public int getCertificatesCount() {
        return result.getCertificatesCount();
      }
      public com.google.protobuf.ByteString getCertificates(int index) {
        return result.getCertificates(index);
      }
      public Builder setCertificates(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.certificates_.set(index, value);
        return this;
      }
      public Builder addCertificates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.certificates_.isEmpty()) {
          result.certificates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.certificates_.add(value);
        return this;
      }
      public Builder addAllCertificates(
          Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.certificates_.isEmpty()) {
          result.certificates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.certificates_);
        return this;
      }
      public Builder clearCertificates() {
        result.certificates_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .MumbleProto.UserStats.Stats from_client = 4;
      public boolean hasFromClient() {
        return result.hasFromClient();
      }
      public com.sapta.htonline.MumbleProto.UserStats.Stats getFromClient() {
        return result.getFromClient();
      }
      public Builder setFromClient(com.sapta.htonline.MumbleProto.UserStats.Stats value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFromClient = true;
        result.fromClient_ = value;
        return this;
      }
      public Builder setFromClient(com.sapta.htonline.MumbleProto.UserStats.Stats.Builder builderForValue) {
        result.hasFromClient = true;
        result.fromClient_ = builderForValue.build();
        return this;
      }
      public Builder mergeFromClient(com.sapta.htonline.MumbleProto.UserStats.Stats value) {
        if (result.hasFromClient() &&
            result.fromClient_ != com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance()) {
          result.fromClient_ =
            com.sapta.htonline.MumbleProto.UserStats.Stats.newBuilder(result.fromClient_).mergeFrom(value).buildPartial();
        } else {
          result.fromClient_ = value;
        }
        result.hasFromClient = true;
        return this;
      }
      public Builder clearFromClient() {
        result.hasFromClient = false;
        result.fromClient_ = com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance();
        return this;
      }
      
      // optional .MumbleProto.UserStats.Stats from_server = 5;
      public boolean hasFromServer() {
        return result.hasFromServer();
      }
      public com.sapta.htonline.MumbleProto.UserStats.Stats getFromServer() {
        return result.getFromServer();
      }
      public Builder setFromServer(com.sapta.htonline.MumbleProto.UserStats.Stats value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFromServer = true;
        result.fromServer_ = value;
        return this;
      }
      public Builder setFromServer(com.sapta.htonline.MumbleProto.UserStats.Stats.Builder builderForValue) {
        result.hasFromServer = true;
        result.fromServer_ = builderForValue.build();
        return this;
      }
      public Builder mergeFromServer(com.sapta.htonline.MumbleProto.UserStats.Stats value) {
        if (result.hasFromServer() &&
            result.fromServer_ != com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance()) {
          result.fromServer_ =
            com.sapta.htonline.MumbleProto.UserStats.Stats.newBuilder(result.fromServer_).mergeFrom(value).buildPartial();
        } else {
          result.fromServer_ = value;
        }
        result.hasFromServer = true;
        return this;
      }
      public Builder clearFromServer() {
        result.hasFromServer = false;
        result.fromServer_ = com.sapta.htonline.MumbleProto.UserStats.Stats.getDefaultInstance();
        return this;
      }
      
      // optional uint32 udp_packets = 6;
      public boolean hasUdpPackets() {
        return result.hasUdpPackets();
      }
      public int getUdpPackets() {
        return result.getUdpPackets();
      }
      public Builder setUdpPackets(int value) {
        result.hasUdpPackets = true;
        result.udpPackets_ = value;
        return this;
      }
      public Builder clearUdpPackets() {
        result.hasUdpPackets = false;
        result.udpPackets_ = 0;
        return this;
      }
      
      // optional uint32 tcp_packets = 7;
      public boolean hasTcpPackets() {
        return result.hasTcpPackets();
      }
      public int getTcpPackets() {
        return result.getTcpPackets();
      }
      public Builder setTcpPackets(int value) {
        result.hasTcpPackets = true;
        result.tcpPackets_ = value;
        return this;
      }
      public Builder clearTcpPackets() {
        result.hasTcpPackets = false;
        result.tcpPackets_ = 0;
        return this;
      }
      
      // optional float udp_ping_avg = 8;
      public boolean hasUdpPingAvg() {
        return result.hasUdpPingAvg();
      }
      public float getUdpPingAvg() {
        return result.getUdpPingAvg();
      }
      public Builder setUdpPingAvg(float value) {
        result.hasUdpPingAvg = true;
        result.udpPingAvg_ = value;
        return this;
      }
      public Builder clearUdpPingAvg() {
        result.hasUdpPingAvg = false;
        result.udpPingAvg_ = 0F;
        return this;
      }
      
      // optional float udp_ping_var = 9;
      public boolean hasUdpPingVar() {
        return result.hasUdpPingVar();
      }
      public float getUdpPingVar() {
        return result.getUdpPingVar();
      }
      public Builder setUdpPingVar(float value) {
        result.hasUdpPingVar = true;
        result.udpPingVar_ = value;
        return this;
      }
      public Builder clearUdpPingVar() {
        result.hasUdpPingVar = false;
        result.udpPingVar_ = 0F;
        return this;
      }
      
      // optional float tcp_ping_avg = 10;
      public boolean hasTcpPingAvg() {
        return result.hasTcpPingAvg();
      }
      public float getTcpPingAvg() {
        return result.getTcpPingAvg();
      }
      public Builder setTcpPingAvg(float value) {
        result.hasTcpPingAvg = true;
        result.tcpPingAvg_ = value;
        return this;
      }
      public Builder clearTcpPingAvg() {
        result.hasTcpPingAvg = false;
        result.tcpPingAvg_ = 0F;
        return this;
      }
      
      // optional float tcp_ping_var = 11;
      public boolean hasTcpPingVar() {
        return result.hasTcpPingVar();
      }
      public float getTcpPingVar() {
        return result.getTcpPingVar();
      }
      public Builder setTcpPingVar(float value) {
        result.hasTcpPingVar = true;
        result.tcpPingVar_ = value;
        return this;
      }
      public Builder clearTcpPingVar() {
        result.hasTcpPingVar = false;
        result.tcpPingVar_ = 0F;
        return this;
      }
      
      // optional .MumbleProto.Version version = 12;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public com.sapta.htonline.MumbleProto.Version getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(com.sapta.htonline.MumbleProto.Version value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder setVersion(com.sapta.htonline.MumbleProto.Version.Builder builderForValue) {
        result.hasVersion = true;
        result.version_ = builderForValue.build();
        return this;
      }
      public Builder mergeVersion(com.sapta.htonline.MumbleProto.Version value) {
        if (result.hasVersion() &&
            result.version_ != com.sapta.htonline.MumbleProto.Version.getDefaultInstance()) {
          result.version_ =
            com.sapta.htonline.MumbleProto.Version.newBuilder(result.version_).mergeFrom(value).buildPartial();
        } else {
          result.version_ = value;
        }
        result.hasVersion = true;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = com.sapta.htonline.MumbleProto.Version.getDefaultInstance();
        return this;
      }
      
      // repeated int32 celt_versions = 13;
      public java.util.List<Integer> getCeltVersionsList() {
        return java.util.Collections.unmodifiableList(result.celtVersions_);
      }
      public int getCeltVersionsCount() {
        return result.getCeltVersionsCount();
      }
      public int getCeltVersions(int index) {
        return result.getCeltVersions(index);
      }
      public Builder setCeltVersions(int index, int value) {
        result.celtVersions_.set(index, value);
        return this;
      }
      public Builder addCeltVersions(int value) {
        if (result.celtVersions_.isEmpty()) {
          result.celtVersions_ = new java.util.ArrayList<Integer>();
        }
        result.celtVersions_.add(value);
        return this;
      }
      public Builder addAllCeltVersions(
          Iterable<? extends Integer> values) {
        if (result.celtVersions_.isEmpty()) {
          result.celtVersions_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.celtVersions_);
        return this;
      }
      public Builder clearCeltVersions() {
        result.celtVersions_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes address = 14;
      public boolean hasAddress() {
        return result.hasAddress();
      }
      public com.google.protobuf.ByteString getAddress() {
        return result.getAddress();
      }
      public Builder setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder clearAddress() {
        result.hasAddress = false;
        result.address_ = getDefaultInstance().getAddress();
        return this;
      }
      
      // optional uint32 bandwidth = 15;
      public boolean hasBandwidth() {
        return result.hasBandwidth();
      }
      public int getBandwidth() {
        return result.getBandwidth();
      }
      public Builder setBandwidth(int value) {
        result.hasBandwidth = true;
        result.bandwidth_ = value;
        return this;
      }
      public Builder clearBandwidth() {
        result.hasBandwidth = false;
        result.bandwidth_ = 0;
        return this;
      }
      
      // optional uint32 onlinesecs = 16;
      public boolean hasOnlinesecs() {
        return result.hasOnlinesecs();
      }
      public int getOnlinesecs() {
        return result.getOnlinesecs();
      }
      public Builder setOnlinesecs(int value) {
        result.hasOnlinesecs = true;
        result.onlinesecs_ = value;
        return this;
      }
      public Builder clearOnlinesecs() {
        result.hasOnlinesecs = false;
        result.onlinesecs_ = 0;
        return this;
      }
      
      // optional uint32 idlesecs = 17;
      public boolean hasIdlesecs() {
        return result.hasIdlesecs();
      }
      public int getIdlesecs() {
        return result.getIdlesecs();
      }
      public Builder setIdlesecs(int value) {
        result.hasIdlesecs = true;
        result.idlesecs_ = value;
        return this;
      }
      public Builder clearIdlesecs() {
        result.hasIdlesecs = false;
        result.idlesecs_ = 0;
        return this;
      }
      
      // optional bool strong_certificate = 18 [default = false];
      public boolean hasStrongCertificate() {
        return result.hasStrongCertificate();
      }
      public boolean getStrongCertificate() {
        return result.getStrongCertificate();
      }
      public Builder setStrongCertificate(boolean value) {
        result.hasStrongCertificate = true;
        result.strongCertificate_ = value;
        return this;
      }
      public Builder clearStrongCertificate() {
        result.hasStrongCertificate = false;
        result.strongCertificate_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.UserStats)
    }
    
    static {
      defaultInstance = new UserStats(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.UserStats)
  }
  
  public static final class RequestBlob extends
      com.google.protobuf.GeneratedMessageLite {
    // Use RequestBlob.newBuilder() to construct.
    private RequestBlob() {
      initFields();
    }
    private RequestBlob(boolean noInit) {}
    
    private static final RequestBlob defaultInstance;
    public static RequestBlob getDefaultInstance() {
      return defaultInstance;
    }
    
    public RequestBlob getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated uint32 session_texture = 1;
    public static final int SESSION_TEXTURE_FIELD_NUMBER = 1;
    private java.util.List<Integer> sessionTexture_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getSessionTextureList() {
      return sessionTexture_;
    }
    public int getSessionTextureCount() { return sessionTexture_.size(); }
    public int getSessionTexture(int index) {
      return sessionTexture_.get(index);
    }
    
    // repeated uint32 session_comment = 2;
    public static final int SESSION_COMMENT_FIELD_NUMBER = 2;
    private java.util.List<Integer> sessionComment_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getSessionCommentList() {
      return sessionComment_;
    }
    public int getSessionCommentCount() { return sessionComment_.size(); }
    public int getSessionComment(int index) {
      return sessionComment_.get(index);
    }
    
    // repeated uint32 channel_description = 3;
    public static final int CHANNEL_DESCRIPTION_FIELD_NUMBER = 3;
    private java.util.List<Integer> channelDescription_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getChannelDescriptionList() {
      return channelDescription_;
    }
    public int getChannelDescriptionCount() { return channelDescription_.size(); }
    public int getChannelDescription(int index) {
      return channelDescription_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getSessionTextureList()) {
        output.writeUInt32(1, element);
      }
      for (int element : getSessionCommentList()) {
        output.writeUInt32(2, element);
      }
      for (int element : getChannelDescriptionList()) {
        output.writeUInt32(3, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getSessionTextureList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSessionTextureList().size();
      }
      {
        int dataSize = 0;
        for (int element : getSessionCommentList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSessionCommentList().size();
      }
      {
        int dataSize = 0;
        for (int element : getChannelDescriptionList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getChannelDescriptionList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.sapta.htonline.MumbleProto.RequestBlob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sapta.htonline.MumbleProto.RequestBlob prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.sapta.htonline.MumbleProto.RequestBlob, Builder> {
      private com.sapta.htonline.MumbleProto.RequestBlob result;
      
      // Construct using com.example.mumbleclient.MumbleProto.RequestBlob.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.sapta.htonline.MumbleProto.RequestBlob();
        return builder;
      }
      
      protected com.sapta.htonline.MumbleProto.RequestBlob internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.sapta.htonline.MumbleProto.RequestBlob();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.sapta.htonline.MumbleProto.RequestBlob getDefaultInstanceForType() {
        return com.sapta.htonline.MumbleProto.RequestBlob.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.sapta.htonline.MumbleProto.RequestBlob build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.sapta.htonline.MumbleProto.RequestBlob buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.sapta.htonline.MumbleProto.RequestBlob buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.sessionTexture_ != java.util.Collections.EMPTY_LIST) {
          result.sessionTexture_ =
            java.util.Collections.unmodifiableList(result.sessionTexture_);
        }
        if (result.sessionComment_ != java.util.Collections.EMPTY_LIST) {
          result.sessionComment_ =
            java.util.Collections.unmodifiableList(result.sessionComment_);
        }
        if (result.channelDescription_ != java.util.Collections.EMPTY_LIST) {
          result.channelDescription_ =
            java.util.Collections.unmodifiableList(result.channelDescription_);
        }
        com.sapta.htonline.MumbleProto.RequestBlob returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.sapta.htonline.MumbleProto.RequestBlob other) {
        if (other == com.sapta.htonline.MumbleProto.RequestBlob.getDefaultInstance()) return this;
        if (!other.sessionTexture_.isEmpty()) {
          if (result.sessionTexture_.isEmpty()) {
            result.sessionTexture_ = new java.util.ArrayList<Integer>();
          }
          result.sessionTexture_.addAll(other.sessionTexture_);
        }
        if (!other.sessionComment_.isEmpty()) {
          if (result.sessionComment_.isEmpty()) {
            result.sessionComment_ = new java.util.ArrayList<Integer>();
          }
          result.sessionComment_.addAll(other.sessionComment_);
        }
        if (!other.channelDescription_.isEmpty()) {
          if (result.channelDescription_.isEmpty()) {
            result.channelDescription_ = new java.util.ArrayList<Integer>();
          }
          result.channelDescription_.addAll(other.channelDescription_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              addSessionTexture(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSessionTexture(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              addSessionComment(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSessionComment(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addChannelDescription(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addChannelDescription(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated uint32 session_texture = 1;
      public java.util.List<Integer> getSessionTextureList() {
        return java.util.Collections.unmodifiableList(result.sessionTexture_);
      }
      public int getSessionTextureCount() {
        return result.getSessionTextureCount();
      }
      public int getSessionTexture(int index) {
        return result.getSessionTexture(index);
      }
      public Builder setSessionTexture(int index, int value) {
        result.sessionTexture_.set(index, value);
        return this;
      }
      public Builder addSessionTexture(int value) {
        if (result.sessionTexture_.isEmpty()) {
          result.sessionTexture_ = new java.util.ArrayList<Integer>();
        }
        result.sessionTexture_.add(value);
        return this;
      }
      public Builder addAllSessionTexture(
          Iterable<? extends Integer> values) {
        if (result.sessionTexture_.isEmpty()) {
          result.sessionTexture_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.sessionTexture_);
        return this;
      }
      public Builder clearSessionTexture() {
        result.sessionTexture_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 session_comment = 2;
      public java.util.List<Integer> getSessionCommentList() {
        return java.util.Collections.unmodifiableList(result.sessionComment_);
      }
      public int getSessionCommentCount() {
        return result.getSessionCommentCount();
      }
      public int getSessionComment(int index) {
        return result.getSessionComment(index);
      }
      public Builder setSessionComment(int index, int value) {
        result.sessionComment_.set(index, value);
        return this;
      }
      public Builder addSessionComment(int value) {
        if (result.sessionComment_.isEmpty()) {
          result.sessionComment_ = new java.util.ArrayList<Integer>();
        }
        result.sessionComment_.add(value);
        return this;
      }
      public Builder addAllSessionComment(
          Iterable<? extends Integer> values) {
        if (result.sessionComment_.isEmpty()) {
          result.sessionComment_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.sessionComment_);
        return this;
      }
      public Builder clearSessionComment() {
        result.sessionComment_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 channel_description = 3;
      public java.util.List<Integer> getChannelDescriptionList() {
        return java.util.Collections.unmodifiableList(result.channelDescription_);
      }
      public int getChannelDescriptionCount() {
        return result.getChannelDescriptionCount();
      }
      public int getChannelDescription(int index) {
        return result.getChannelDescription(index);
      }
      public Builder setChannelDescription(int index, int value) {
        result.channelDescription_.set(index, value);
        return this;
      }
      public Builder addChannelDescription(int value) {
        if (result.channelDescription_.isEmpty()) {
          result.channelDescription_ = new java.util.ArrayList<Integer>();
        }
        result.channelDescription_.add(value);
        return this;
      }
      public Builder addAllChannelDescription(
          Iterable<? extends Integer> values) {
        if (result.channelDescription_.isEmpty()) {
          result.channelDescription_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.channelDescription_);
        return this;
      }
      public Builder clearChannelDescription() {
        result.channelDescription_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MumbleProto.RequestBlob)
    }
    
    static {
      defaultInstance = new RequestBlob(true);
      com.sapta.htonline.MumbleProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MumbleProto.RequestBlob)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
